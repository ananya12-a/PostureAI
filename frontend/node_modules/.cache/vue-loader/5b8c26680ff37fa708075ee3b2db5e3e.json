{"remainingRequest":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ananyaaggarwal/Desktop/PostureAI/frontend/src/components/VideoElementViewer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/src/components/VideoElementViewer.vue","mtime":1640084299947},{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8vaW1wb3J0IHtQb3NlLCBQT1NFX0NPTk5FQ1RJT05TfSBmcm9tICJAbWVkaWFwaXBlL3Bvc2UiOwogICAgZXhwb3J0IGRlZmF1bHQgewogICAgICAgIHByb3BzOiB7CiAgICAgICAgICAgIHZpZGVvU3JjIDogU3RyaW5nLAogICAgICAgIH0sCiAgICAgICAgZGF0YTogZnVuY3Rpb24oKSB7CiAgICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgICAgICBmZWVkYmFja0xpc3Q6IFtdLAogICAgICAgICAgICAgICAgcmVzdWx0czogW10sCiAgICAgICAgICAgICAgICBwb3NlOiAwLAogICAgICAgICAgICAgICAgaWQ6IDEsCiAgICAgICAgICAgICAgICBhY3RpdmU6IGZhbHNlCiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGNyZWF0ZWQ6IGZ1bmN0aW9uKCkgewogICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWYKICAgICAgICAgICAgdGhpcy5wb3NlID0gbmV3IFBvc2Uoe2xvY2F0ZUZpbGU6IChmaWxlKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGBodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvbnBtL0BtZWRpYXBpcGUvcG9zZS8ke2ZpbGV9YDsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIHRoaXMucG9zZS5zZXRPcHRpb25zKHsKICAgICAgICAgICAgICAgIG1vZGVsQ29tcGxleGl0eTogMSwKICAgICAgICAgICAgICAgIHNtb290aExhbmRtYXJrczogdHJ1ZSwKICAgICAgICAgICAgICAgIG1pbkRldGVjdGlvbkNvbmZpZGVuY2U6IDAuNSwKICAgICAgICAgICAgICAgIG1pblRyYWNraW5nQ29uZmlkZW5jZTogMC41CiAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgLy90aGlzLnBvc2Uub25SZWFkeShmdW5jdGlvbigpeyB0aGlzLmFjdGl2ZSA9IHRydWUgfSkKCiAgICAgICAgICAgIHRoaXMucG9zZS5vblJlc3VsdHMocmVzdWx0ID0+IHsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3VsdCkKICAgICAgICAgICAgICAgIHRoaXMuZmVlZGJhY2tMaXN0ID0gdGhpcy5yZXN1bHRzID09PSByZXN1bHQKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmCiAgICAgICAgICAgICAgICB0aGlzLnJlc3VsdHMgPSB7bGFuZG1hcmtzOiByZXN1bHQucG9zZUxhbmRtYXJrcywgUE9TRV9DT05ORUNUSU9OUzogUE9TRV9DT05ORUNUSU9OUywgcGNfbGVuZ3RoOiBQT1NFX0NPTk5FQ1RJT05TLmxlbmd0aCwgbF9sZW5ndGg6IHJlc3VsdC5wb3NlTGFuZG1hcmtzLmxlbmd0aH0KICAgICAgICAgICAgICAgIC8vIGNhbGwgbWZmIGFuZCBnZXQgYW5hbHlzYWJsZSByZXN1bHRzCiAgICAgICAgICAgICAgICAvLyB1cGRhdGUgcGxvdAogICAgICAgICAgICAgICAgLy9tYWtlIGEgbmV3IGZpbGUsIGNhbGxlZCBwbG90LmpzLCBmdW5jdGlvbnMgZWFjaCB0YWtlIGluIGEgcmVzdWx0IG9iamVjdCwgYW5kIHJldHVybiBwbG90bHkgZ3JhcGgKICAgICAgICAgICAgfSk7CiAgICAgICAgfSwKICAgICAgICBtZXRob2RzOiB7CiAgICAgICAgICAgIGxvYWRGZWVkYmFjazogZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKCdhc2RmYScpCiAgICAgICAgICAgICAgICAvL2ZldGNoKCdodHRwOi8vbG9jYWxob3N0OjMwMDAvY29uZmlnL3Rlc3QtbGlzdCcpLnRoZW4oZGF0YSA9PiBkYXRhLmpzb24oKS50aGVuKAogICAgICAgICAgICAgICAgLy8gICAgZWxlbWVudHMyID0+IHRoaXMuZmVlZGJhY2tMaXN0ID0gdGhpcy5mZWVkYmFja0xpc3QuY29uY2F0KGVsZW1lbnRzMikKICAgICAgICAgICAgICAgIC8vKSkKICAgICAgICAgICAgfSwKICAgICAgICAgICAgZGVidWc6ICgpID0+IHsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdjbGlja2VkJykKICAgICAgICAgICAgfSwKICAgICAgICAgICAgbmV4dEZyYW1lOiBmdW5jdGlvbigpIHsKICAgICAgICAgICAgICAgIC8vaWYgKCF0aGlzLmFjdGl2ZSkgcmV0dXJuOwogICAgICAgICAgICAgICAgbGV0IHZpZGVvID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQodGhpcy5pZCkKICAgICAgICAgICAgICAgIHZpZGVvLmN1cnJlbnRUaW1lICs9IDEvOAogICAgICAgICAgICAgICAgdGhpcy5wb3NlLnNlbmQoe2ltYWdlOiB2aWRlb30pCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHByZXZGcmFtZTogZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICAvL2lmICghdGhpcy5hY3RpdmUpIHJldHVybjsKICAgICAgICAgICAgICAgIGxldCB2aWRlbyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHRoaXMuaWQpCiAgICAgICAgICAgICAgICB2aWRlby5jdXJyZW50VGltZSAtPSAxLzgKICAgICAgICAgICAgICAgIHRoaXMucG9zZS5zZW5kKHtpbWFnZTogdmlkZW99KQogICAgICAgICAgICB9LAogICAgICAgIH0sCiAgICB9Cg=="},{"version":3,"sources":["VideoElementViewer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"VideoElementViewer.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"card\">\n        <div class=\"row row70\">\n            <div class=\"column col70\">\n                <video  controlsList=\"nodownload nofullscreen noremoteplayback\" :id=\"id\" :key=\"videoSrc\">\n                    <source src=\"@/assets/squatSide.mp4\" type=\"video/mp4\"/>\n                </video>\n            </div>\n            <div class=\"column col30\">\n                <canvas :id=\"`graph-${id}`\"/>\n            </div>\n        </div>\n\n        <div class=\"row row30\">\n            <div class=\"column col70\">\n                <p>Feedback</p>\n                <input type=\"button\" @click=\"loadFeedback\" value =\"Load Feedback For Frame\" /> \n                <p> {{feedbackList}} </p>\n                <p> {{results}} </p>\n            </div>\n            <div class=\"column col30 controls\">\n                <a @click=\"prevFrame\" class=\"previous round a_button\"><i class=\"fas fa-backward circle-icon\"/></a>\n                <a @click=\"nextFrame\" class=\"next round a_button\"><i class=\"fas fa-forward circle-icon\"/></a>\n                <br>\n                <p id=\"annotation_label\">Annotations: </p>\n                <label class=\"switch\">\n                    <input type=\"checkbox\">\n                    <span class=\"slider round\"></span>\n                </label>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n//import {Pose, POSE_CONNECTIONS} from \"@mediapipe/pose\";\n    export default {\n        props: {\n            videoSrc : String,\n        },\n        data: function() {\n            return {\n                feedbackList: [],\n                results: [],\n                pose: 0,\n                id: 1,\n                active: false\n            }\n        },\n        created: function() {\n            // eslint-disable-next-line no-undef\n            this.pose = new Pose({locateFile: (file) => {\n                    return `https://cdn.jsdelivr.net/npm/@mediapipe/pose/${file}`;\n                }\n            });\n            this.pose.setOptions({\n                modelComplexity: 1,\n                smoothLandmarks: true,\n                minDetectionConfidence: 0.5,\n                minTrackingConfidence: 0.5\n            });\n\n            //this.pose.onReady(function(){ this.active = true })\n\n            this.pose.onResults(result => {\n                console.log(result)\n                this.feedbackList = this.results === result\n                \n                // eslint-disable-next-line no-undef\n                this.results = {landmarks: result.poseLandmarks, POSE_CONNECTIONS: POSE_CONNECTIONS, pc_length: POSE_CONNECTIONS.length, l_length: result.poseLandmarks.length}\n                // call mff and get analysable results\n                // update plot\n                //make a new file, called plot.js, functions each take in a result object, and return plotly graph\n            });\n        },\n        methods: {\n            loadFeedback: function() {\n                //console.log('asdfa')\n                //fetch('http://localhost:3000/config/test-list').then(data => data.json().then(\n                //    elements2 => this.feedbackList = this.feedbackList.concat(elements2)\n                //))\n            },\n            debug: () => {\n                console.log('clicked')\n            },\n            nextFrame: function() {\n                //if (!this.active) return;\n                let video = document.getElementById(this.id)\n                video.currentTime += 1/8\n                this.pose.send({image: video})\n            },\n            prevFrame: function() {\n                //if (!this.active) return;\n                let video = document.getElementById(this.id)\n                video.currentTime -= 1/8\n                this.pose.send({image: video})\n            },\n        },\n    }\n</script>\n\n<style scoped>\n.switch {\n  position: relative;\n  display: inline-block;\n  width: 60px;\n  height: 34px;\n  vertical-align: middle;\n}\n\n.switch input { \n  opacity: 0;\n  width: 0;\n  height: 0;\n}\n\n.slider {\n  position: absolute;\n  cursor: pointer;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: #ccc;\n  -webkit-transition: .4s;\n  transition: .4s;\n}\n\n.slider:before {\n  position: absolute;\n  content: \"\";\n  height: 26px;\n  width: 26px;\n  left: 4px;\n  bottom: 4px;\n  background-color: white;\n  -webkit-transition: .4s;\n  transition: .4s;\n}\n\ninput:checked + .slider {\n  background-color: #2196F3;\n}\n\ninput:focus + .slider {\n  box-shadow: 0 0 1px #2196F3;\n}\n\ninput:checked + .slider:before {\n  -webkit-transform: translateX(26px);\n  -ms-transform: translateX(26px);\n  transform: translateX(26px);\n}\n\n/* Rounded sliders */\n.slider.round {\n  border-radius: 34px;\n}\n\n.slider.round:before {\n  border-radius: 50%;\n}\n\n#annotation_label{\n    margin: 5% 3%;\n    display:inline-block;\n}\n\n.circle-icon:hover {\n  background-color: #ddd;\n  color: black;\n}\n.circle-icon {\n    background: #f1f1f1;\n    padding:4%;\n    border-radius: 50%;\n    margin: 1%;\n}\n\n.round {\n  border-radius: 50%;\n}\n\n.controls{\n    text-align:center;\n}\n\n.row70> .col70 > video {\n    max-height: 100%;\n    max-width: 100%;\n    border-radius: 16px 0 0 0;\n}\n.row {\n  display: flex;\n}\n.column {\n  margin: 0;\n}\n.col70 {\n    flex: 70%;\n}\n.col30{\n    flex: 30%;\n    padding: 1%;\n}\n.row70 {\n    height: 70%;\n}\n.row30{\n    height: 30%;\n    padding: 1%;\n}\n.card {\n    position: relative;\n    background: #fff;\n    box-shadow: 0 15px 25px rgba(0,0,0,0.25);\n    border-radius: 16px 16px 16px 16px;\n    justify-content: center;\n    align-items: center;\n    margin: 5%;\n    z-index: 0;\n    text-align:left;\n}\n.card > * {\n    overflow: hidden;\n}\n</style>"]}]}