{"remainingRequest":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ananyaaggarwal/Desktop/PostureAI/frontend/src/components/VideoElementViewer.vue?vue&type=style&index=0&id=4438c7ba&scoped=true&lang=css&","dependencies":[{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/src/components/VideoElementViewer.vue","mtime":1640212694368},{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5zd2l0Y2ggewogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgd2lkdGg6IDYwcHg7CiAgaGVpZ2h0OiAzNHB4OwogIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7Cn0KCi5hbm5vdGF0aW9uLXN3aXRjaHsKICAgIGRpc3BsYXk6aW5saW5lOwogICAgbWFyZ2luOjUlIDAlOwp9CgoubWQtaWNvbi1idXR0b257CiAgICBtYXJnaW46NSUgMTUlOwp9Cgouc3dpdGNoIGlucHV0IHsgCiAgb3BhY2l0eTogMDsKICB3aWR0aDogMDsKICBoZWlnaHQ6IDA7Cn0KCi5zbGlkZXIgewogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICBjdXJzb3I6IHBvaW50ZXI7CiAgdG9wOiAwOwogIGxlZnQ6IDA7CiAgcmlnaHQ6IDA7CiAgYm90dG9tOiAwOwogIGJhY2tncm91bmQtY29sb3I6ICNjY2M7CiAgLXdlYmtpdC10cmFuc2l0aW9uOiAuNHM7CiAgdHJhbnNpdGlvbjogLjRzOwp9Cgouc2xpZGVyOmJlZm9yZSB7CiAgcG9zaXRpb246IGFic29sdXRlOwogIGNvbnRlbnQ6ICIiOwogIGhlaWdodDogMjZweDsKICB3aWR0aDogMjZweDsKICBsZWZ0OiA0cHg7CiAgYm90dG9tOiA0cHg7CiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7CiAgLXdlYmtpdC10cmFuc2l0aW9uOiAuNHM7CiAgdHJhbnNpdGlvbjogLjRzOwp9CgppbnB1dDpjaGVja2VkICsgLnNsaWRlciB7CiAgYmFja2dyb3VuZC1jb2xvcjogIzIxOTZGMzsKfQoKaW5wdXQ6Zm9jdXMgKyAuc2xpZGVyIHsKICBib3gtc2hhZG93OiAwIDAgMXB4ICMyMTk2RjM7Cn0KCmlucHV0OmNoZWNrZWQgKyAuc2xpZGVyOmJlZm9yZSB7CiAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjZweCk7CiAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgyNnB4KTsKICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjZweCk7Cn0KCi8qIFJvdW5kZWQgc2xpZGVycyAqLwouc2xpZGVyLnJvdW5kIHsKICBib3JkZXItcmFkaXVzOiAzNHB4Owp9Cgouc2xpZGVyLnJvdW5kOmJlZm9yZSB7CiAgYm9yZGVyLXJhZGl1czogNTAlOwp9CgojYW5ub3RhdGlvbl9sYWJlbHsKICAgIG1hcmdpbjogNSUgMyU7CiAgICBkaXNwbGF5OmlubGluZS1ibG9jazsKfQoKLnJvdW5kOmhvdmVyIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGRkOwogIGNvbG9yOiBibGFjazsKfQoucm91bmQgewogICAgYmFja2dyb3VuZDogI2YxZjFmMTsKICAgIHBhZGRpbmc6MiU7CiAgICBib3JkZXItcmFkaXVzOiA1MCU7CiAgICBtYXJnaW46IDIlOwp9Cgouc2Vjb25kLXJvd3sKICAgIG1hcmdpbi10b3A6NSU7Cn0KCi5hX2J1dHRvbnsKICAgIGJhY2tncm91bmQ6ICNmMWYxZjE7Cn0KCi5jb250cm9sc3sKICAgIHRleHQtYWxpZ246Y2VudGVyOwp9Cgoucm93NzA+IC5jb2w3MCA+IHZpZGVvIHsKICAgIG1heC1oZWlnaHQ6IDEwMCU7CiAgICBtYXgtd2lkdGg6IDEwMCU7CiAgICAvKmJvcmRlci1yYWRpdXM6IDE2cHggMCAwIDA7Ki8KfQoucm93IHsKICBkaXNwbGF5OiBmbGV4Owp9Ci5jb2x1bW4gewogIG1hcmdpbjogMDsKfQouY29sNzAgewogICAgZmxleDogNzAlOwp9Ci5jb2wzMHsKICAgIGZsZXg6IDMwJTsKICAgIHBhZGRpbmc6IDElOwp9Ci5yb3c3MCB7CiAgICBoZWlnaHQ6IDcwJTsKfQoucm93MzB7CiAgICBoZWlnaHQ6IDMwJTsKICAgIHBhZGRpbmc6IDElOwp9Ci8qLmNhcmQgewogICAgcG9zaXRpb246IHJlbGF0aXZlOwogICAgYmFja2dyb3VuZDogI2ZmZjsKICAgIGJveC1zaGFkb3c6IDAgMTVweCAyNXB4IHJnYmEoMCwwLDAsMC4yNSk7CiAgICBib3JkZXItcmFkaXVzOiAxNnB4IDE2cHggMTZweCAxNnB4OwogICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgICBhbGlnbi1pdGVtczogY2VudGVyOwogICAgbWFyZ2luOiA1JTsKICAgIHotaW5kZXg6IDA7CiAgICB0ZXh0LWFsaWduOmxlZnQ7Cn0KLmNhcmQgPiAqIHsKICAgIG92ZXJmbG93OiBoaWRkZW47Cn0qLwoKLmhpZGRlbiB7CiAgICBoZWlnaHQ6IDA7Cn0KCiAgLm1kLXN3aXRjaCB7CiAgICBkaXNwbGF5OiBmbGV4OwogIH0KCgo="},{"version":3,"sources":["VideoElementViewer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"VideoElementViewer.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div>\n        <!--split up into components-->\n        <div class=\"row row70\">\n            <div class=\"column col70\">\n                <video  controlsList=\"nodownload nofullscreen noremoteplayback\" :id=\"id\" :key=\"videoSrc\" class=\"hidden\" ref=\"video_source\">\n                    <source src=\"@/assets/squatSide.mp4\" type=\"video/mp4\"/>\n                </video>\n                <canvas width=\"1280px\" height=\"720px\" ref=\"output_canvas\"></canvas>\n            </div>\n            <div class=\"column col30\">\n                <md-list>\n                    <md-subheader> Average Score: {{averageScore}} </md-subheader>\n                    <md-list-item v-for=\"feedback in feedbackList\" v-bind:key=\"feedback.attr\" :style=\"getColor(feedback)\">\n                        <md-icon v-if=\"feedback.score <= 65 && feedback.score > 30\" :style=\"getColor(feedback)\">warning</md-icon>\n                        <md-icon v-else-if=\"feedback.score > 65\" :style=\"getColor(feedback)\">check</md-icon>\n                        <md-icon v-else :style=\"getColor(feedback)\" >error</md-icon>\n                        <span class=\"md-list-item-text\" :style=\"getColor(feedback)\"><strong>{{feedback.attr}}:</strong> {{feedback.feedback}}</span>\n                        <md-tooltip md-direction=\"left\"> <strong> Score:</strong> {{feedback.score}} </md-tooltip>\n                    </md-list-item>\n                </md-list>\n            </div>\n        </div>\n\n        <div class=\"row row30\">\n            <div class=\"column col70\">\n                <ChartComponent :yvals=\"frameData\" v-bind:key=\"frameData.length\"/>\n            </div>\n            <div class=\"column col30 controls\">\n                    <div>\n                        <md-field>\n                            <md-select v-model=\"excerciseType\" id=\"movie\" placeholder=\"Exercise Name\" @click=\"console.log('change')\"> <!--@change change exercise analysis-->\n                                <md-optgroup label=\"Side View\">\n                                    <md-option v-for=\"excerciseType in excerciseTypes.side\" v-bind:key=\"excerciseType\" :value=\"excerciseType\">{{excerciseType}}</md-option>\n                                </md-optgroup>\n                                <md-optgroup label=\"Front View\">\n                                    <md-option v-for=\"excerciseType in excerciseTypes.front\" v-bind:key=\"excerciseType\" :value=\"excerciseType\">{{excerciseType}}</md-option>\n                                </md-optgroup>\n                            </md-select>\n                        </md-field>\n                    </div>\n                    <div class=\"md-layout md-gutter second-row\">\n                        <div class=\"md-layout-item\">\n                            <md-button class=\"md-icon-button md-raised\" @click=\"prevFrame\">\n                                <md-icon>fast_rewind</md-icon>\n                            </md-button>\n                            <md-button class=\"md-icon-button md-raised\" @click=\"nextFrame\">\n                                <md-icon>fast_forward</md-icon>\n                            </md-button>\n                        </div>\n                        <md-switch v-model=\"annotations\" @change=\"sameFrame\" class=\"annotation-switch md-layout-item\">Anotations</md-switch>\n                    </div>\n                    \n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport ChartComponent from \"./ChartComponent.vue\";\n//import {Pose, POSE_CONNECTIONS} from \"@mediapipe/pose\";\nimport engine from \"../assets/engine.js\";\nimport lungeAnalyse from \"../assets/lungesAnalysis.js\";\nimport squatAnalyse from \"../assets/squatAnalysis.js\";\n    export default {\n        components: {\n            ChartComponent,\n        },\n        props: {\n            videoSrc : String,\n        },\n        data: function() {\n            return {\n                feedbackList: [],\n                results: [],\n                pose: 0,\n                id: 1,\n                active: false,\n                annotations: false,\n                averageScore: 0.0,\n                excerciseTypes: {side: [\"Lunge (Side)\", \"Squat (Side)\"], front: [\"Side Lunge (Front)\"]},//[\"Lunges(Side View)\", \"Sit ups(Side View)\", \"Squats(Side View)\"],\n                excerciseType: \"Lunge (Side)\",\n                view: \"Front\",\n                video: {\n                    sourceLink: \"\",\n                    component: {},\n                    frames: []\n                },\n                frameData: [],\n                currFrame: -1,\n            }\n        },\n        created: function() {\n            //this.video.sourceLink = \"@/assets/squatSide.mp4\";\n            //this.video.component = videojs(this.video.sourceLink);\n            engine.init();\n            // eslint-disable-next-line no-undef\n            this.pose = new Pose({locateFile: (file) => {\n                    return `https://cdn.jsdelivr.net/npm/@mediapipe/pose/${file}`;\n                }\n            });\n            this.pose.setOptions({\n                modelComplexity: 1,\n                smoothLandmarks: true,\n                minDetectionConfidence: 0.5,\n                minTrackingConfidence: 0.5\n            });\n\n            //this.pose.onReady(function(){ this.active = true })\n\n            this.pose.onResults(result => {\n                this.feedbackList = this.results === result\n                \n                //eslint-disable-next-line no-undef\n                this.results = {\n                    keypoints: result.poseLandmarks, \n                    //eslint-disable-next-line no-undef\n                    POSE_CONNECTIONS: POSE_CONNECTIONS, \n                    //eslint-disable-next-line no-undef\n                    pc_length: POSE_CONNECTIONS.length, \n                    //eslint-disable-next-line no-undef\n                    l_length: result.poseLandmarks.length\n                    }\n                \n                engine.update({...this.results});\n                //engine.run()\n                if (this.excerciseType==='Squat (Side)'){\n                    squatAnalyse(engine)\n                }\n                else if (this.excerciseType==='Lunge (Side)'){\n                    lungeAnalyse(engine)\n                }\n                else{\n                    squatAnalyse(engine)\n                }\n\n                const output = engine.getOutput();\n                this.feedbackList = [];\n                this.averageScore = output.averageScore;\n                for(let i = 0; i < output.features.length; i++) {\n                    this.feedbackList[i] = {\n                        attr: output.features[i].attr,\n                        feedback: output.features[i].feedback,\n                        score: output.features[i].score\n                    }\n                }\n\n                // update plot\n                //make a new file, called plot.js, functions each take in a result object, and return plotly graph\n\n                const canvasElement = this.$refs.output_canvas;\n                const canvasCtx = canvasElement.getContext('2d');\n\n                canvasCtx.save();\n                canvasCtx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n\n                // Only overwrite existing pixels.\n                canvasCtx.globalCompositeOperation = 'source-in';\n                canvasCtx.fillStyle = '#00FF00';\n                canvasCtx.fillRect(0, 0, canvasElement.width, canvasElement.height);\n\n                // Only overwrite missing pixels.\n                canvasCtx.globalCompositeOperation = 'destination-atop';\n                canvasCtx.drawImage(\n                    result.image, 0, 0, canvasElement.width, canvasElement.height);\n\n                \n                this.frameData[this.currFrame] = this.averageScore;\n                console.log(\"Frame Data\", this.frameData);\n\n                if (!this.annotations) {\n                    canvasCtx.restore();\n                    return\n                }\n                canvasCtx.globalCompositeOperation = 'source-over';\n                //eslint-disable-next-line no-undef\n                drawConnectors(canvasCtx, result.poseLandmarks, POSE_CONNECTIONS,\n                                {color: '#00FF00', lineWidth: 4});\n                //eslint-disable-next-line no-undef\n                drawLandmarks(canvasCtx, result.poseLandmarks,\n                                {color: '#FF0000', lineWidth: 2});\n                canvasCtx.restore();\n\n                console.log(this.$refs.video_source.currentTime);\n            });\n            \n        },\n        methods: {\n            loadFeedback: function() {\n                //console.log('asdfa')\n                //fetch('http://localhost:3000/config/test-list').then(data => data.json().then(\n                //    elements2 => this.feedbackList = this.feedbackList.concat(elements2)\n                //))\n            },\n            debug: () => {\n                console.log('clicked')\n            },\n            sameFrame: function() {\n                console.log(\"Same Frame\")\n                //if (!this.active) return;\n                let video = this.$refs.video_source;\n                console.log(video.currentTime);\n                this.pose.send({image: video})\n            },\n            nextFrame: function() {\n                console.log(\"Next Frame\")\n                //if (!this.active) return;\n                let video = this.$refs.video_source;\n                this.$refs.video_source.framerate = 1;\n                if (video.duration <= video.currentTime) return;\n                video.currentTime += 1;\n                this.pose.send({image: video});\n                this.currFrame++;\n            },\n            prevFrame: function() {\n                console.log(\"Prev Frame\")\n                //if (!this.active) return;\n                let video = this.$refs.video_source;\n                this.$refs.video_source.framerate = 1;\n                if (0 >= video.currentTime -1) return;\n                video.currentTime -= 1;\n                this.pose.send({image: video});\n                this.currFrame--;\n            },\n            getColor(feedback) {\n                if (feedback.score <= 65 && feedback.score > 30) {\n                    return `\n                        background-color: #F4B02A;\n                        color: white;`;\n                }\n                else if (feedback.score > 65) {\n                    return `\n                        background-color: #62C370;\n                        color: white;`;\n                }\n                else return `\n                        background-color: #FE654F;\n                        color: white;`;\n            }\n        },//#003F91, #1B9AAA, (#0B63C1)\n    }\n</script>\n\n<style scoped>\n.switch {\n  position: relative;\n  display: inline-block;\n  width: 60px;\n  height: 34px;\n  vertical-align: middle;\n}\n\n.annotation-switch{\n    display:inline;\n    margin:5% 0%;\n}\n\n.md-icon-button{\n    margin:5% 15%;\n}\n\n.switch input { \n  opacity: 0;\n  width: 0;\n  height: 0;\n}\n\n.slider {\n  position: absolute;\n  cursor: pointer;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: #ccc;\n  -webkit-transition: .4s;\n  transition: .4s;\n}\n\n.slider:before {\n  position: absolute;\n  content: \"\";\n  height: 26px;\n  width: 26px;\n  left: 4px;\n  bottom: 4px;\n  background-color: white;\n  -webkit-transition: .4s;\n  transition: .4s;\n}\n\ninput:checked + .slider {\n  background-color: #2196F3;\n}\n\ninput:focus + .slider {\n  box-shadow: 0 0 1px #2196F3;\n}\n\ninput:checked + .slider:before {\n  -webkit-transform: translateX(26px);\n  -ms-transform: translateX(26px);\n  transform: translateX(26px);\n}\n\n/* Rounded sliders */\n.slider.round {\n  border-radius: 34px;\n}\n\n.slider.round:before {\n  border-radius: 50%;\n}\n\n#annotation_label{\n    margin: 5% 3%;\n    display:inline-block;\n}\n\n.round:hover {\n  background-color: #ddd;\n  color: black;\n}\n.round {\n    background: #f1f1f1;\n    padding:2%;\n    border-radius: 50%;\n    margin: 2%;\n}\n\n.second-row{\n    margin-top:5%;\n}\n\n.a_button{\n    background: #f1f1f1;\n}\n\n.controls{\n    text-align:center;\n}\n\n.row70> .col70 > video {\n    max-height: 100%;\n    max-width: 100%;\n    /*border-radius: 16px 0 0 0;*/\n}\n.row {\n  display: flex;\n}\n.column {\n  margin: 0;\n}\n.col70 {\n    flex: 70%;\n}\n.col30{\n    flex: 30%;\n    padding: 1%;\n}\n.row70 {\n    height: 70%;\n}\n.row30{\n    height: 30%;\n    padding: 1%;\n}\n/*.card {\n    position: relative;\n    background: #fff;\n    box-shadow: 0 15px 25px rgba(0,0,0,0.25);\n    border-radius: 16px 16px 16px 16px;\n    justify-content: center;\n    align-items: center;\n    margin: 5%;\n    z-index: 0;\n    text-align:left;\n}\n.card > * {\n    overflow: hidden;\n}*/\n\n.hidden {\n    height: 0;\n}\n\n  .md-switch {\n    display: flex;\n  }\n\n\n</style>"]}]}