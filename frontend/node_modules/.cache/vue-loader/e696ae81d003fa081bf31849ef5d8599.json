{"remainingRequest":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ananyaaggarwal/Desktop/PostureAI/frontend/src/components/VideoElementViewer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/src/components/VideoElementViewer.vue","mtime":1640292210798},{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["VideoElementViewer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"VideoElementViewer.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div>\n        <div class=\"row row70\">\n            <div class=\"column col70\">\n                <video  controlsList=\"nodownload nofullscreen noremoteplayback\" :id=\"id\" :key=\"videoSrc\" class=\"hidden\" ref=\"video_source\">\n                    <source src=\"@/assets/squatSide.mp4\" type=\"video/mp4\"/>\n                </video>\n                <canvas width=\"1280px\" height=\"720px\" ref=\"output_canvas\"></canvas>\n            </div>\n            <div class=\"column col30\">\n                <scoreList :feedbackList=\"feedbackList\" :averageScore=\"averageScore\"/>\n            </div>\n        </div>\n\n        <div class=\"row row30\">\n            <div class=\"column col70\">\n                <ChartComponent :yvals=\"frameData\" v-bind:key=\"frameData.length\"/>\n            </div>\n            <div class=\"column col30 controls\">\n                <ControlPanel :excerciseTypes=\"excerciseTypes\" :framerate=\"framerate\" :annotations=\"annotations\" @nextFrame=\"nextFrame\" @prevFrame=\"prevFrame\" @sameFrame=\"sameFrame\" @framerate-update=\"updateframerate\" @exercise-update=\"updateExcercise\"/>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport ChartComponent from \"./ChartComponent.vue\";\n//import videoView from \"./videoView.vue\";\nimport ScoreList from \"./ScoreList.vue\";\nimport ControlPanel from \"./ControlPanel.vue\";\n//import {Pose, POSE_CONNECTIONS} from \"@mediapipe/pose\";\nimport engine from \"../assets/engine.js\";\nimport lungeAnalyse from \"../assets/lungesAnalysis.js\";\nimport squatAnalyse from \"../assets/squatAnalysis.js\";\n\n    export default {\n        components: {\n            ChartComponent,\n            ScoreList,\n            ControlPanel,\n        },\n        props: {\n            videoSrc : String,\n        },\n        data: function() {\n            return {\n                feedbackList: [],\n                results: [],\n                pose: 0,\n                id: 1,\n                active: false,\n                annotations: false,\n                averageScore: 0.0,\n                excerciseTypes: {side: [\"Lunge (Side)\", \"Squat (Side)\"], front: [\"Side Lunge (Front)\"]},//[\"Lunges(Side View)\", \"Sit ups(Side View)\", \"Squats(Side View)\"],\n                excerciseType: \"Lunge (Side)\",\n                view: \"Front\",\n                framerate: 8,\n                frameData: [],\n                currFrame: -1,\n            }\n        },\n        created: function() {\n            //this.video.sourceLink = \"@/assets/squatSide.mp4\";\n            //this.video.component = videojs(this.video.sourceLink);\n            engine.init();\n            // eslint-disable-next-line no-undef\n            this.pose = new Pose({locateFile: (file) => {\n                    return `https://cdn.jsdelivr.net/npm/@mediapipe/pose/${file}`;\n                }\n            });\n            this.pose.setOptions({\n                modelComplexity: 1,\n                smoothLandmarks: true,\n                minDetectionConfidence: 0.5,\n                minTrackingConfidence: 0.5\n            });\n\n            //this.pose.onReady(function(){ this.active = true })\n\n            this.pose.onResults(result => {\n                this.feedbackList = this.results === result\n                \n                //eslint-disable-next-line no-undef\n                this.results = {\n                    keypoints: result.poseLandmarks, \n                    //eslint-disable-next-line no-undef\n                    POSE_CONNECTIONS: POSE_CONNECTIONS, \n                    //eslint-disable-next-line no-undef\n                    pc_length: POSE_CONNECTIONS.length, \n                    //eslint-disable-next-line no-undef\n                    l_length: result.poseLandmarks.length\n                    }\n                \n                engine.update({...this.results});\n                //engine.run()\n                if (this.excerciseType==='Squat (Side)'){\n                    squatAnalyse(engine)\n                }\n                else if (this.excerciseType==='Lunge (Side)'){\n                    lungeAnalyse(engine)\n                }\n                else{\n                    squatAnalyse(engine)\n                }\n\n                const output = engine.getOutput();\n                this.feedbackList = [];\n                this.averageScore = output.averageScore;\n                for(let i = 0; i < output.features.length; i++) {\n                    this.feedbackList[i] = {\n                        attr: output.features[i].attr,\n                        feedback: output.features[i].feedback,\n                        score: output.features[i].score\n                    }\n                }\n\n                // update plot\n                //make a new file, called plot.js, functions each take in a result object, and return plotly graph\n\n                const canvasElement = this.$refs.output_canvas;\n                const canvasCtx = canvasElement.getContext('2d');\n\n                canvasCtx.save();\n                canvasCtx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n\n                // Only overwrite existing pixels.\n                canvasCtx.globalCompositeOperation = 'source-in';\n                canvasCtx.fillStyle = '#00FF00';\n                canvasCtx.fillRect(0, 0, canvasElement.width, canvasElement.height);\n\n                // Only overwrite missing pixels.\n                canvasCtx.globalCompositeOperation = 'destination-atop';\n                canvasCtx.drawImage(\n                    result.image, 0, 0, canvasElement.width, canvasElement.height);\n\n                \n                this.frameData[this.currFrame] = this.averageScore;\n                console.log(\"Frame Data\", this.frameData);\n\n                if (!this.annotations) {\n                    canvasCtx.restore();\n                    return\n                }\n                canvasCtx.globalCompositeOperation = 'source-over';\n                //eslint-disable-next-line no-undef\n                drawConnectors(canvasCtx, result.poseLandmarks, POSE_CONNECTIONS,\n                                {color: '#00FF00', lineWidth: 4});\n                //eslint-disable-next-line no-undef\n                drawLandmarks(canvasCtx, result.poseLandmarks,\n                                {color: '#FF0000', lineWidth: 2});\n                canvasCtx.restore();\n\n                console.log(this.$refs.video_source.currentTime);\n            });\n            \n        },\n        methods: {\n            sameFrame: function() {\n                console.log(\"Same Frame\")\n                //if (!this.active) return;\n                let video = this.$refs.video_source;\n                console.log(video.currentTime);\n                this.pose.send({image: video})\n                this.annotations = !this.annotations\n            },\n            nextFrame: function() {\n                console.log(\"Next Frame\")\n                //if (!this.active) return;\n                let video = this.$refs.video_source;\n                if (video.duration <= video.currentTime) return;\n                video.currentTime += 1/this.framerate;\n                this.pose.send({image: video});\n                this.currFrame++;\n            },\n            prevFrame: function() {\n                console.log(\"Prev Frame\")\n                //if (!this.active) return;\n                let video = this.$refs.video_source;\n                if (0 >= video.currentTime -1) return;\n                video.currentTime -= 1/this.framerate;\n                this.pose.send({image: video});\n                this.currFrame--;\n            },\n            updateframerate: function(rate){\n                \n                this.framerate = rate\n                console.log(\"Update \", rate)\n            },\n            updateExcercise: function (new_ex){\n                this.excerciseType = new_ex\n                console.log(\"exercise \", new_ex)\n            }\n        },//#003F91, #1B9AAA, (#0B63C1)\n    }\n</script>\n\n<style scoped>\n.framerate-slider{\n    margin-top:15%;\n    color:red;\n}\n\n.md-icon-button{\n    margin:5% 15%;\n}\n\n.second-row{\n    margin-top:5%;\n}\n\n.controls{\n    text-align:center;\n}\n\n.row70> .col70 > video {\n    max-height: 100%;\n    max-width: 100%;\n}\n.row {\n  display: flex;\n}\n.column {\n  margin: 0;\n}\n.col70 {\n    flex: 70%;\n}\n.col30{\n    flex: 30%;\n    padding: 1%;\n}\n.row70 {\n    height: 70%;\n}\n.row30{\n    height: 30%;\n    padding: 1%;\n}\n\n\n.hidden {\n    height: 0;\n}\n\n</style>"]}]}