{"remainingRequest":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ananyaaggarwal/Desktop/PostureAI/frontend/src/App.vue?vue&type=template&id=7ba5bd90&scoped=true&","dependencies":[{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/src/App.vue","mtime":1641493976286},{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}