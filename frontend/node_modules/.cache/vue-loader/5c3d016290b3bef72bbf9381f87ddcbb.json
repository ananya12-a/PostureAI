{"remainingRequest":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ananyaaggarwal/Desktop/PostureAI/frontend/src/components/upload.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/src/components/upload.vue","mtime":1641903599373},{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CmltcG9ydCB7bWFwR2V0dGVycywgbWFwU3RhdGUsIG1hcE11dGF0aW9uc30gZnJvbSAndnVleCcKZXhwb3J0IGRlZmF1bHQgewogICAgZGF0YTogKCk9Pih7CiAgICAgICAgdmlkZW86bnVsbCwKICAgICAgICBtZXNzYWdlOiIiLAogICAgICAgIGV4Y2VyY2lzZVR5cGVzOiB7c2lkZTogWyJMdW5nZSAoU2lkZSkiLCAiU3F1YXQgKFNpZGUpIl0sIGZyb250OiBbIlNpZGUgTHVuZ2UgKEZyb250KSJdfSwKICAgICAgICBleGNlcmNpc2VUeXBlTmFtZToiTHVuZ2UgKFNpZGUpIiwKICAgIH0pLAogICAgbWV0aG9kczp7CiAgICAgICAgaGFuZGxlKGV2ZW50KSB7CiAgICAgICAgICAgIHRoaXMudmlkZW8gPSBldmVudC50YXJnZXQuZmlsZXMubGVuZ3RoID4gMCA/IGV2ZW50LnRhcmdldC5maWxlc1swXSA6IG51bGw7CiAgICAgICAgICAgIC8vY29uc29sZS5sb2coImhhbmRsZSIsIHRoaXMudmlkZW8pCiAgICAgICAgfSwKICAgICAgICAuLi5tYXBNdXRhdGlvbnMoe3VwZGF0ZVN1YklEOidzdWJtaXNzaW9ucy91cGRhdGVTdWJJRCcsIHVwZGF0ZUN1cnJlbnRQYWdlOidwYWdlcy91cGRhdGVDdXJyZW50UGFnZSd9KSwKICAgICAgICB1cGRhdGVDdXJyZW50U3ViKHN1YklEKXsKICAgICAgICAgICAgdGhpcy51cGRhdGVTdWJJRChzdWJJRCkKICAgICAgICAgICAgdGhpcy51cGRhdGVDdXJyZW50UGFnZSgnRGFzaGJvYXJkJykKICAgICAgICB9LAogICAgICAgIHVwbG9hZCgpewogICAgICAgICAgICBpZiAoIXRoaXMudmlkZW8pIHJldHVybjsgCiAgICAgICAgICAgIGNvbnN0IGZvcm1EYXRhT2JqID0gbmV3IEZvcm1EYXRhKCk7CiAgICAgICAgICAgIGZvcm1EYXRhT2JqLmFwcGVuZCgidmlkZW8iLCB0aGlzLnZpZGVvKQogICAgICAgICAgICAvL2NvbnNvbGUubG9nKCJ1cGxvYWQiLCBmb3JtRGF0YU9iai5nZXRBbGwoJ3ZpZGVvJyksIHRoaXMudXNlcklELCB0aGlzLmV4Y2VyY2lzZVR5cGVOYW1lKQogICAgICAgICAgICBheGlvcy5wb3N0KGAke3RoaXMuYmFzZVVSTH0vdXBsb2FkL3VwbG9hZGZpbGUvJHt0aGlzLnVzZXJJRH0vJHt0aGlzLmV4Y2VyY2lzZVR5cGVOYW1lfWAsIAogICAgICAgICAgICAgICAgZm9ybURhdGFPYmosCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdtdWx0aXBhcnQvZm9ybS1kYXRhJwogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIC50aGVuKChyZXMpID0+IHsKICAgICAgICAgICAgICAgICAgICBpZiAocmVzLnN0YXR1cyA9PT0gMjAwICYmIHJlcy5kYXRhICYmIHJlcy5kYXRhLnN1YklEKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlcy5kYXRhKQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZUN1cnJlbnRTdWIocmVzLmRhdGEuc3ViSUQpCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSkKICAgICAgICB9LAogICAgICAgIAogICAgICAgIAogICAgfSwKICAgIGNvbXB1dGVkOnsKICAgICAgICAuLi5tYXBHZXR0ZXJzKHtiYXNlVVJMOiAndXJscy9nZXRVUkwnfSksCiAgICAgICAgLi4ubWFwU3RhdGUoJ2FjY291bnQnLCB7CiAgICAgICAgICAgIHVzZXJuYW1lOiBzdGF0ZSA9PiBzdGF0ZS51c2VybmFtZSwKICAgICAgICAgICAgdXNlcklEOiBzdGF0ZSA9PiBzdGF0ZS51c2VySUQsCiAgICAgICAgICAgIHRva2VuOiBzdGF0ZSA9PiBzdGF0ZS50b2tlbiwKICAgICAgICB9KSwKICAgIH0KfQo="},{"version":3,"sources":["upload.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"upload.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div>\n        <div class=\"md-layout\">\n            <div class=\"md-layout-item\">\n                <md-field>\n                <label>Video Upload</label>\n                <md-file name='video' @change=\"handle\" placeholder=\"Upload single video\" accept=\"video/*\" />\n                </md-field>\n                <md-button type=\"submit\" class=\"md-primary\" @click=\"upload\">Upload</md-button>\n                <div class=\"message\">{{message}}</div>\n            </div>\n            <div class=\"md-layout-item\" style=\"padding-left:5%\">\n                <md-field>\n                    <md-select v-model=\"excerciseTypeName\" placeholder=\"Exercise Name\"> \n                        <md-optgroup label=\"Side View\">\n                            <md-option v-for=\"excerciseType in excerciseTypes.side\" v-bind:key=\"excerciseType\" :value=\"excerciseType\">{{excerciseType}}</md-option>\n                        </md-optgroup>\n                        <md-optgroup label=\"Front View\">\n                            <md-option v-for=\"excerciseType in excerciseTypes.front\" v-bind:key=\"excerciseType\" :value=\"excerciseType\">{{excerciseType}}</md-option>\n                        </md-optgroup>\n                    </md-select>\n                </md-field>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport {mapGetters, mapState, mapMutations} from 'vuex'\nexport default {\n    data: ()=>({\n        video:null,\n        message:\"\",\n        excerciseTypes: {side: [\"Lunge (Side)\", \"Squat (Side)\"], front: [\"Side Lunge (Front)\"]},\n        excerciseTypeName:\"Lunge (Side)\",\n    }),\n    methods:{\n        handle(event) {\n            this.video = event.target.files.length > 0 ? event.target.files[0] : null;\n            //console.log(\"handle\", this.video)\n        },\n        ...mapMutations({updateSubID:'submissions/updateSubID', updateCurrentPage:'pages/updateCurrentPage'}),\n        updateCurrentSub(subID){\n            this.updateSubID(subID)\n            this.updateCurrentPage('Dashboard')\n        },\n        upload(){\n            if (!this.video) return; \n            const formDataObj = new FormData();\n            formDataObj.append(\"video\", this.video)\n            //console.log(\"upload\", formDataObj.getAll('video'), this.userID, this.excerciseTypeName)\n            axios.post(`${this.baseURL}/upload/uploadfile/${this.userID}/${this.excerciseTypeName}`, \n                formDataObj,\n                {\n                    'Content-Type': 'multipart/form-data'\n                })\n                .then((res) => {\n                    if (res.status === 200 && res.data && res.data.subID) {\n                        console.log(res.data)\n                        this.updateCurrentSub(res.data.subID)\n                    }\n                })\n        },\n        \n        \n    },\n    computed:{\n        ...mapGetters({baseURL: 'urls/getURL'}),\n        ...mapState('account', {\n            username: state => state.username,\n            userID: state => state.userID,\n            token: state => state.token,\n        }),\n    }\n}\n</script>\n\n<style scoped>\n\n</style>"]}]}