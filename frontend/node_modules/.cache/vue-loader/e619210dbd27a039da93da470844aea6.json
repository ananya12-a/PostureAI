{"remainingRequest":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ananyaaggarwal/Desktop/PostureAI/frontend/src/components/submissions.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/src/components/submissions.vue","mtime":1641903563499},{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCB7bWFwU3RhdGUsIG1hcEdldHRlcnMsIG1hcE11dGF0aW9uc30gZnJvbSAndnVleCcKZXhwb3J0IGRlZmF1bHQgewogICAgZGF0YTogKCkgPT4gKHsKICAgICAgICBzdGFydERhdGU6IG51bGwsCiAgICAgICAgZW5kRGF0ZTogbmV3IERhdGUoKSwKICAgICAgICBzdGFydE51bWJlcjogbnVsbCwKICAgICAgICBlbmROdW1iZXI6bnVsbCwKICAgICAgICBzdWJtaXNzaW9uczogW10sCiAgICAgICAgdGltZXN0YW1wczpbXSwKICAgICAgICBzdWJEYXRhOiBbXSwKICAgICAgICBzaG93RGlhbG9nOiBmYWxzZSwKICAgICAgICBzdWJEYXRhSWNvbnM6WwogICAgICAgICAgICB7aWNvbjonbG9jYWxfZmlyZV9kZXBhcnRtZW50JywgbmFtZTonZGlmZmljdWx0eScsIHNob3c6J0RpZmZpY3VsdHknfSwKICAgICAgICAgICAge2ljb246J2ZpdG5lc3NfY2VudGVyJywgbmFtZTonZXhlcmNpc2UnLCBzaG93OidFeGVyY2lzZSd9LAogICAgICAgICAgICB7aWNvbjondmlkZW9jYW0nLCBuYW1lOidvcmllbnRhdGlvbicsIHNob3c6J09yaWVudGF0aW9uJ30sCiAgICAgICAgICAgIHtpY29uOidzY29yZScsIG5hbWU6J292ZXJhbGxfc2NvcmUnLCBzaG93OidPdmVyYWxsIFNjb3JlJ30sCiAgICAgICAgICAgIHtpY29uOidzY2hlZHVsZScsIG5hbWU6J3NlY29uZHNfYW5hbHlzZWQnLCBzaG93OidTZWNvbmRzIEFuYWx5c2VkJ30sCiAgICAgICAgXQogICAgfSksCiAgICBjb21wdXRlZDogewogICAgICBtZXNzYWdlQ2xhc3MgKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAnbWQtaW52YWxpZCc6IHRoaXMuaGFzTWVzc2FnZXMKICAgICAgICB9CiAgICAgIH0sCiAgICAgIC4uLm1hcFN0YXRlKCdhY2NvdW50JywgewogICAgICAgICAgdXNlcm5hbWU6IHN0YXRlID0+IHN0YXRlLnVzZXJuYW1lLAogICAgICAgICAgdXNlcklEOiBzdGF0ZSA9PiBzdGF0ZS51c2VySUQsCiAgICAgICAgICB0b2tlbjogc3RhdGUgPT4gc3RhdGUudG9rZW4sCiAgICAgIH0pLAogICAgICAKICAgICAgLi4ubWFwR2V0dGVycyh7YmFzZVVSTDogJ3VybHMvZ2V0VVJMJ30pCiAgICB9LAogICAgd2F0Y2g6ewogICAgICAgIHN0YXJ0TnVtYmVyOiBmdW5jdGlvbiAoKXsKICAgICAgICAgICAgCiAgICAgICAgICAgIGlmICh0aGlzLnN0YXJ0TnVtYmVyICE9IG51bGwgJiYgdGhpcy5lbmROdW1iZXIgIT0gbnVsbCAmJiB0aGlzLnN0YXJ0TnVtYmVyICE9IHVuZGVmaW5lZCAmJiB0aGlzLmVuZE51bWJlciAhPSB1bmRlZmluZWQpewogICAgICAgICAgICAgICAgY29uc29sZS5sb2codGhpcy5iYXNlVVJMKQogICAgICAgICAgICAgICAgYXhpb3MucG9zdChgJHt0aGlzLmJhc2VVUkx9L3N1Ym1pc3Npb24vZ2V0LXN1Ym1pc3Npb24tbGlzdC9udW1iZXIvJHt0aGlzLnN0YXJ0TnVtYmVyfS8ke3RoaXMuZW5kTnVtYmVyfWAsIHt1c2VyX2lkOnRoaXMudXNlcklELCB0b2tlbjp0aGlzLnRva2VuLCB1c2VybmFtZTogdGhpcy51c2VybmFtZX0pCiAgICAgICAgICAgICAgICAudGhlbigocmVzKT0+ewoKICAgICAgICAgICAgICAgICAgICB0aGlzLnN1Ym1pc3Npb25zID0gcmVzLmRhdGEuc3VibWlzc2lvbnMKICAgICAgICAgICAgICAgICAgICBmb3IgKGxldCBpPTA7IGk8cmVzLmRhdGEudGltZXN0YW1wcy5sZW5ndGg7aSsrKXsKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy50aW1lc3RhbXBzW2ldID0gIG5ldyBEYXRlKHJlcy5kYXRhLnRpbWVzdGFtcHNbaV0pLnRvTG9jYWxlU3RyaW5nKCkKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBlbmROdW1iZXI6IGZ1bmN0aW9uKCl7CiAgICAgICAgICAgIGlmICh0aGlzLnN0YXJ0TnVtYmVyICE9IG51bGwgJiYgdGhpcy5lbmROdW1iZXIgIT0gbnVsbCAmJiB0aGlzLnN0YXJ0TnVtYmVyICE9IHVuZGVmaW5lZCAmJiB0aGlzLmVuZE51bWJlciAhPSB1bmRlZmluZWQpewogICAgICAgICAgICAgICAgY29uc29sZS5sb2codGhpcy5iYXNlVVJMKQogICAgICAgICAgICAgICAgYXhpb3MucG9zdChgJHt0aGlzLmJhc2VVUkx9L3N1Ym1pc3Npb24vZ2V0LXN1Ym1pc3Npb24tbGlzdC9udW1iZXIvJHt0aGlzLnN0YXJ0TnVtYmVyfS8ke3RoaXMuZW5kTnVtYmVyfWAsIHt1c2VyX2lkOnRoaXMudXNlcklELCB0b2tlbjp0aGlzLnRva2VuLCB1c2VybmFtZTogdGhpcy51c2VybmFtZX0pCiAgICAgICAgICAgICAgICAudGhlbigocmVzKT0+ewogICAgICAgICAgICAgICAgICAgIHRoaXMuc3VibWlzc2lvbnMgPSByZXMuZGF0YS5zdWJtaXNzaW9ucwogICAgICAgICAgICAgICAgICAgIGZvciAobGV0IGk9MDsgaTxyZXMuZGF0YS50aW1lc3RhbXBzLmxlbmd0aDtpKyspewogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnRpbWVzdGFtcHNbaV0gPSAgbmV3IERhdGUocmVzLmRhdGEudGltZXN0YW1wc1tpXSkudG9Mb2NhbGVTdHJpbmcoKQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHN0YXJ0RGF0ZTogZnVuY3Rpb24gKCl7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKHRoaXMudXNlcm5hbWUpCiAgICAgICAgICAgIGlmICh0aGlzLnN0YXJ0RGF0ZSAhPSBudWxsICYmIHRoaXMuZW5kRGF0ZSAhPSBudWxsICYmIHRoaXMuc3RhcnREYXRlICE9IHVuZGVmaW5lZCAmJiB0aGlzLmVuZERhdGUgIT0gdW5kZWZpbmVkKXsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHRoaXMuc3RhcnREYXRlKQogICAgICAgICAgICAgICAgYXhpb3MucG9zdChgJHt0aGlzLmJhc2VVUkx9L3N1Ym1pc3Npb24vZ2V0LXN1Ym1pc3Npb24tbGlzdC9kYXRlLyR7dGhpcy5zdGFydERhdGUuZ2V0VGltZSgpfS8ke3RoaXMuZW5kRGF0ZS5nZXRUaW1lKCl9YCwge3VzZXJfaWQ6dGhpcy51c2VySUQsIHRva2VuOnRoaXMudG9rZW4sIHVzZXJuYW1lOiB0aGlzLnVzZXJuYW1lfSkKICAgICAgICAgICAgICAgIC50aGVuKChyZXMpPT57CiAgICAgICAgICAgICAgICAgICAgdGhpcy5zdWJtaXNzaW9ucyA9IHJlcy5kYXRhLnN1Ym1pc3Npb25zCiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2codGhpcy5zdWJtaXNzaW9ucykKICAgICAgICAgICAgICAgICAgICBmb3IgKGxldCBpPTA7IGk8cmVzLmRhdGEudGltZXN0YW1wcy5sZW5ndGg7aSsrKXsKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy50aW1lc3RhbXBzW2ldID0gIG5ldyBEYXRlKHJlcy5kYXRhLnRpbWVzdGFtcHNbaV0pLnRvTG9jYWxlU3RyaW5nKCkKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBlbmREYXRlOiBmdW5jdGlvbigpewogICAgICAgICAgICBpZiAodGhpcy5zdGFydERhdGUgIT0gbnVsbCAmJiB0aGlzLmVuZERhdGUgIT0gbnVsbCAmJiB0aGlzLnN0YXJ0RGF0ZSAhPSB1bmRlZmluZWQgJiYgdGhpcy5lbmREYXRlICE9IHVuZGVmaW5lZCl7CiAgICAgICAgICAgICAgICBheGlvcy5wb3N0KGAke3RoaXMuYmFzZVVSTH0vc3VibWlzc2lvbi9nZXQtc3VibWlzc2lvbi1saXN0L2RhdGUvJHt0aGlzLnN0YXJ0RGF0ZS5nZXRUaW1lKCl9LyR7dGhpcy5lbmREYXRlLmdldFRpbWUoKX1gLCB7dXNlcl9pZDp0aGlzLnVzZXJJRCwgdG9rZW46dGhpcy50b2tlbiwgdXNlcm5hbWU6IHRoaXMudXNlcm5hbWV9KQogICAgICAgICAgICAgICAgLnRoZW4oKHJlcyk9PnsKICAgICAgICAgICAgICAgICAgICB0aGlzLnN1Ym1pc3Npb25zID0gcmVzLmRhdGEuc3VibWlzc2lvbnMKICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyh0aGlzLnN1Ym1pc3Npb25zKQogICAgICAgICAgICAgICAgICAgIGZvciAobGV0IGk9MDsgaTxyZXMuZGF0YS50aW1lc3RhbXBzLmxlbmd0aDtpKyspewogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnRpbWVzdGFtcHNbaV0gPSAgbmV3IERhdGUocmVzLmRhdGEudGltZXN0YW1wc1tpXSkudG9Mb2NhbGVTdHJpbmcoKQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9LAogICAgbWV0aG9kczp7CiAgICAgICAgZ2V0SW5mbyhzdWJJRCl7CiAgICAgICAgICAgIGF4aW9zLnBvc3QoYCR7dGhpcy5iYXNlVVJMfS9zdWJtaXNzaW9uL2dldC1zdWJtaXNzaW9uLWRhdGFgLCB7dXNlcl9pZDp0aGlzLnVzZXJJRCwgdG9rZW46dGhpcy50b2tlbiwgc3VibWlzc2lvbklEOiBzdWJJRH0pCiAgICAgICAgICAgIC50aGVuKChyZXMpPT57CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMuZGF0YSkKICAgICAgICAgICAgICAgIC8vY29uc3Qga2V5cyA9IE9iamVjdC5rZXlzKHJlcy5kYXRhKQogICAgICAgICAgICAgICAgLy9jb25zdCB2YWx1ZXMgPSBPYmplY3QudmFsdWVzKHJlcy5kYXRhKQogICAgICAgICAgICAgICAgdGhpcy5zdWJEYXRhID0gcmVzLmRhdGEvL1tdCiAgICAgICAgICAgICAgICAvKmZvciAobGV0IGkgPTA7IGk8a2V5cy5sZW5ndGg7aSsrKXsKICAgICAgICAgICAgICAgICAgICB0aGlzLmZyaWVuZERhdGEucHVzaCh7ImZpZWxkIjoga2V5c1tpXSwgInZhbHVlIjogdmFsdWVzW2ldfSkKICAgICAgICAgICAgICAgIH0qLwogICAgICAgICAgICAgICAgdGhpcy5zdWJEYXRhLnRpbWVzdGFtcCA9IG5ldyBEYXRlKHRoaXMuc3ViRGF0YS50aW1lc3RhbXAqMTAwMCkudG9Mb2NhbGVTdHJpbmcoKQogICAgICAgICAgICAgICAgY29uc29sZS5sb2coImkiLCB0aGlzLnN1YkRhdGEpCiAgICAgICAgICAgIH0pCiAgICAgICAgfSwKICAgICAgICBkaXNhYmxlZERhdGVzKGRhdGUpewogICAgICAgICAgICAvL2NvbnNvbGUubG9nKHRoaXMuc3RhcnREYXRlLCBkYXRlLCBkYXRlPj1uZXcgRGF0ZSh0aGlzLnN0YXJ0RGF0ZSkpCiAgICAgICAgICAgIHJldHVybiBkYXRlPG5ldyBEYXRlKHRoaXMuc3RhcnREYXRlKQogICAgICAgIH0sCiAgICAgICAgLi4ubWFwTXV0YXRpb25zKHt1cGRhdGVTdWJJRDonc3VibWlzc2lvbnMvdXBkYXRlU3ViSUQnLCB1cGRhdGVDdXJyZW50UGFnZToncGFnZXMvdXBkYXRlQ3VycmVudFBhZ2UnfSksCiAgICAgICAgdXBkYXRlQ3VycmVudFN1YihzdWJJRCl7CiAgICAgICAgICAgIHRoaXMudXBkYXRlU3ViSUQoc3ViSUQpCiAgICAgICAgICAgIHRoaXMudXBkYXRlQ3VycmVudFBhZ2UoJ0Rhc2hib2FyZCcpCiAgICAgICAgfSwKICAgICAgICAKICAgIH0KfQo="},{"version":3,"sources":["submissions.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"submissions.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div>\n        <div class=\"md-layout md-gutter\">\n            <div class=\"md-layout-item\">\n                <span class=\"md-subheading\">Start Date:</span>\n                <md-datepicker v-model=\"startDate\" md-immediately/>\n                <span class=\"md-subheading\">End Date:</span>\n                <md-datepicker v-model=\"endDate\" md-immediately :md-disabled-dates=\"disabledDates\"/>\n            </div>\n            <div class=\"md-layout-item\">\n                <md-field>\n                    <label>Start Number</label>\n                    <md-input v-model=\"startNumber\" type=\"number\"></md-input>\n                    <span class=\"md-error\">There is an error</span>\n                </md-field>\n                <md-field>\n                    <label>End Number</label>\n                    <md-input v-model=\"endNumber\" type=\"number\"></md-input>\n                    <span class=\"md-error\">There is an error</span>\n                </md-field>\n            </div>\n        </div>\n        <md-list>\n            <md-subheader>Submissions</md-subheader>\n            <md-list-item v-for=\"(item, index) in this.submissions\" v-bind:key=\"index\" @click=\"getInfo(item)\">\n                <span class=\"md-list-item-text\" @click=\"showDialog = true\"><b>{{timestamps[index]}} :</b> {{item}}</span>\n                <md-dialog :md-active.sync=\"showDialog\">\n                    <md-dialog-title style=\"text-align:center\">{{subData.timestamp}}</md-dialog-title>\n\n                    <md-tabs md-dynamic-height>\n                        <md-tab md-label=\"Statistics\">\n                            <md-list v-for=\"data in subDataIcons\" v-bind:key=\"data.name\">\n                                <md-list-item>\n                                    <md-icon>{{data.icon}}</md-icon>\n                                    <span class=\"md-list-item-text\">{{data.show}} : {{subData[data.name]}}</span>\n                                </md-list-item>\n                            </md-list>\n                        </md-tab>\n                        <md-tab md-label=\"Video\">\n                            <video  controlsList=\"nodownload nofullscreen\">\n                                <source src=\"@/assets/squatSide.mp4\" type=\"video/mp4\"/>\n                            </video>\n                        </md-tab>\n                    </md-tabs>\n\n                    <md-dialog-actions>\n                        <md-button class=\"md-primary\" @click=\"updateCurrentSub(item)\">Open in Dashboard</md-button>\n                        <md-button class=\"md-primary\" @click=\"showDialog = false\">Close</md-button>\n                    </md-dialog-actions>\n                </md-dialog>\n            </md-list-item>\n        </md-list>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport {mapState, mapGetters, mapMutations} from 'vuex'\nexport default {\n    data: () => ({\n        startDate: null,\n        endDate: new Date(),\n        startNumber: null,\n        endNumber:null,\n        submissions: [],\n        timestamps:[],\n        subData: [],\n        showDialog: false,\n        subDataIcons:[\n            {icon:'local_fire_department', name:'difficulty', show:'Difficulty'},\n            {icon:'fitness_center', name:'exercise', show:'Exercise'},\n            {icon:'videocam', name:'orientation', show:'Orientation'},\n            {icon:'score', name:'overall_score', show:'Overall Score'},\n            {icon:'schedule', name:'seconds_analysed', show:'Seconds Analysed'},\n        ]\n    }),\n    computed: {\n      messageClass () {\n        return {\n          'md-invalid': this.hasMessages\n        }\n      },\n      ...mapState('account', {\n          username: state => state.username,\n          userID: state => state.userID,\n          token: state => state.token,\n      }),\n      \n      ...mapGetters({baseURL: 'urls/getURL'})\n    },\n    watch:{\n        startNumber: function (){\n            \n            if (this.startNumber != null && this.endNumber != null && this.startNumber != undefined && this.endNumber != undefined){\n                console.log(this.baseURL)\n                axios.post(`${this.baseURL}/submission/get-submission-list/number/${this.startNumber}/${this.endNumber}`, {user_id:this.userID, token:this.token, username: this.username})\n                .then((res)=>{\n\n                    this.submissions = res.data.submissions\n                    for (let i=0; i<res.data.timestamps.length;i++){\n                        this.timestamps[i] =  new Date(res.data.timestamps[i]).toLocaleString()\n                    }\n                })\n            }\n        },\n        endNumber: function(){\n            if (this.startNumber != null && this.endNumber != null && this.startNumber != undefined && this.endNumber != undefined){\n                console.log(this.baseURL)\n                axios.post(`${this.baseURL}/submission/get-submission-list/number/${this.startNumber}/${this.endNumber}`, {user_id:this.userID, token:this.token, username: this.username})\n                .then((res)=>{\n                    this.submissions = res.data.submissions\n                    for (let i=0; i<res.data.timestamps.length;i++){\n                        this.timestamps[i] =  new Date(res.data.timestamps[i]).toLocaleString()\n                    }\n                    \n                })\n            }\n        },\n        startDate: function (){\n            console.log(this.username)\n            if (this.startDate != null && this.endDate != null && this.startDate != undefined && this.endDate != undefined){\n                console.log(this.startDate)\n                axios.post(`${this.baseURL}/submission/get-submission-list/date/${this.startDate.getTime()}/${this.endDate.getTime()}`, {user_id:this.userID, token:this.token, username: this.username})\n                .then((res)=>{\n                    this.submissions = res.data.submissions\n                    console.log(this.submissions)\n                    for (let i=0; i<res.data.timestamps.length;i++){\n                        this.timestamps[i] =  new Date(res.data.timestamps[i]).toLocaleString()\n                    }\n                })\n            }\n        },\n        endDate: function(){\n            if (this.startDate != null && this.endDate != null && this.startDate != undefined && this.endDate != undefined){\n                axios.post(`${this.baseURL}/submission/get-submission-list/date/${this.startDate.getTime()}/${this.endDate.getTime()}`, {user_id:this.userID, token:this.token, username: this.username})\n                .then((res)=>{\n                    this.submissions = res.data.submissions\n                    console.log(this.submissions)\n                    for (let i=0; i<res.data.timestamps.length;i++){\n                        this.timestamps[i] =  new Date(res.data.timestamps[i]).toLocaleString()\n                    }\n                    \n                })\n            }\n        }\n    },\n    methods:{\n        getInfo(subID){\n            axios.post(`${this.baseURL}/submission/get-submission-data`, {user_id:this.userID, token:this.token, submissionID: subID})\n            .then((res)=>{\n                console.log(res.data)\n                //const keys = Object.keys(res.data)\n                //const values = Object.values(res.data)\n                this.subData = res.data//[]\n                /*for (let i =0; i<keys.length;i++){\n                    this.friendData.push({\"field\": keys[i], \"value\": values[i]})\n                }*/\n                this.subData.timestamp = new Date(this.subData.timestamp*1000).toLocaleString()\n                console.log(\"i\", this.subData)\n            })\n        },\n        disabledDates(date){\n            //console.log(this.startDate, date, date>=new Date(this.startDate))\n            return date<new Date(this.startDate)\n        },\n        ...mapMutations({updateSubID:'submissions/updateSubID', updateCurrentPage:'pages/updateCurrentPage'}),\n        updateCurrentSub(subID){\n            this.updateSubID(subID)\n            this.updateCurrentPage('Dashboard')\n        },\n        \n    }\n}\n</script>\n\n<style scoped>\n\n</style>"]}]}