{"remainingRequest":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ananyaaggarwal/Desktop/PostureAI/frontend/src/components/VideoElementViewer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/src/components/VideoElementViewer.vue","mtime":1640201639878},{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["VideoElementViewer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"VideoElementViewer.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div>\n        <!--split up into components-->\n        <div class=\"row row70\">\n            <div class=\"column col70\">\n                <video  controlsList=\"nodownload nofullscreen noremoteplayback\" :id=\"id\" :key=\"videoSrc\" class=\"hidden\" ref=\"video_source\">\n                    <source src=\"@/assets/squatSide.mp4\" type=\"video/mp4\"/>\n                </video>\n                <canvas width=\"1280px\" height=\"720px\" ref=\"output_canvas\"></canvas>\n            </div>\n            <div class=\"column col30\">\n                <md-list>\n                    <md-subheader> Average Score: {{averageScore}} </md-subheader>\n                    <md-list-item v-for=\"feedback in feedbackList\" v-bind:key=\"feedback.attr\" :style=\"getColor(feedback)\">\n                        <md-icon v-if=\"feedback.score <= 65 && feedback.score > 30\" :style=\"getColor(feedback)\">warning</md-icon>\n                        <md-icon v-else-if=\"feedback.score > 65\" :style=\"getColor(feedback)\">check</md-icon>\n                        <md-icon v-else :style=\"getColor(feedback)\" >error</md-icon>\n                        <span class=\"md-list-item-text\" :style=\"getColor(feedback)\"><strong>{{feedback.attr}}:</strong> {{feedback.feedback}}</span>\n                        <md-tooltip md-direction=\"left\"> <strong> Score:</strong> {{feedback.score}} </md-tooltip>\n                    </md-list-item>\n                </md-list>\n            </div>\n        </div>\n\n        <div class=\"row row30\">\n            <div class=\"column col70\">\n                <canvas :id=\"`graph-${id}`\"/>\n            </div>\n            <div class=\"column col30 controls\">\n                <div style=\"width:30%; display:inline;\">\n                    <a @click=\"prevFrame\" class=\"previous round\"><span class=\"material-icons circle-icon\">fast_rewind</span></a>\n                    <a @click=\"nextFrame\" class=\"next round\"><span class=\"material-icons circle-icon\">fast_forward</span></a>\n                </div>\n                <div style=\"width:70%; display:inline;\">\n                    <p id=\"annotation_label\">Annotations: </p>\n                    <label class=\"switch\">\n                        <input type=\"checkbox\" v-model=\"annotations\" @change=\"sameFrame\">\n                        <span class=\"slider round\"></span>\n                    </label>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n//import {Pose, POSE_CONNECTIONS} from \"@mediapipe/pose\";\nimport engine from \"../assets/engine.js\";\n//import lungeAnalyse from \"../assets/lungesAnalysis.js\";\nimport squatAnalyse from \"../assets/squatAnalysis.js\";\nimport videojs from \"videojs\";\nimport \"videojs-frames\";\n    export default {\n        props: {\n            videoSrc : String,\n        },\n        data: function() {\n            return {\n                feedbackList: [],\n                results: [],\n                pose: 0,\n                id: 1,\n                active: false,\n                annotations: false,\n                averageScore: 0.0,\n                video: {\n                    sourceLink: \"\",\n                    component: {},\n                    frames: []\n                },\n            }\n        },\n        created: function() {\n            this.video.sourceLink = \"@/assets/squatSide.mp4\";\n            this.video.component = videojs(this.video.sourceLink);\n            engine.init();\n            // eslint-disable-next-line no-undef\n            this.pose = new Pose({locateFile: (file) => {\n                    return `https://cdn.jsdelivr.net/npm/@mediapipe/pose/${file}`;\n                }\n            });\n            this.pose.setOptions({\n                modelComplexity: 1,\n                smoothLandmarks: true,\n                minDetectionConfidence: 0.5,\n                minTrackingConfidence: 0.5\n            });\n\n            //this.pose.onReady(function(){ this.active = true })\n\n            this.pose.onResults(result => {\n                this.feedbackList = this.results === result\n                \n                //eslint-disable-next-line no-undef\n                this.results = {\n                    keypoints: result.poseLandmarks, \n                    //eslint-disable-next-line no-undef\n                    POSE_CONNECTIONS: POSE_CONNECTIONS, \n                    //eslint-disable-next-line no-undef\n                    pc_length: POSE_CONNECTIONS.length, \n                    //eslint-disable-next-line no-undef\n                    l_length: result.poseLandmarks.length\n                    }\n                \n                engine.update({...this.results});\n                //engine.run()\n                squatAnalyse(engine)\n\n                const output = engine.getOutput();\n                this.feedbackList = [];\n                this.averageScore = output.averageScore;\n                for(let i = 0; i < output.features.length; i++) {\n                    this.feedbackList[i] = {\n                        attr: output.features[i].attr,\n                        feedback: output.features[i].feedback,\n                        score: output.features[i].score\n                    }\n                }\n\n                // update plot\n                //make a new file, called plot.js, functions each take in a result object, and return plotly graph\n\n                const canvasElement = this.$refs.output_canvas;\n                const canvasCtx = canvasElement.getContext('2d');\n\n                canvasCtx.save();\n                canvasCtx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n\n                // Only overwrite existing pixels.\n                canvasCtx.globalCompositeOperation = 'source-in';\n                canvasCtx.fillStyle = '#00FF00';\n                canvasCtx.fillRect(0, 0, canvasElement.width, canvasElement.height);\n\n                // Only overwrite missing pixels.\n                canvasCtx.globalCompositeOperation = 'destination-atop';\n                canvasCtx.drawImage(\n                    result.image, 0, 0, canvasElement.width, canvasElement.height);\n\n                if (!this.annotations) {\n                    canvasCtx.restore();\n                    return\n                }\n                canvasCtx.globalCompositeOperation = 'source-over';\n                //eslint-disable-next-line no-undef\n                drawConnectors(canvasCtx, result.poseLandmarks, POSE_CONNECTIONS,\n                                {color: '#00FF00', lineWidth: 4});\n                //eslint-disable-next-line no-undef\n                drawLandmarks(canvasCtx, result.poseLandmarks,\n                                {color: '#FF0000', lineWidth: 2});\n                canvasCtx.restore();\n\n                console.log(this.$refs.video_source.currentTime);\n            });\n            \n        },\n        methods: {\n            loadFeedback: function() {\n                //console.log('asdfa')\n                //fetch('http://localhost:3000/config/test-list').then(data => data.json().then(\n                //    elements2 => this.feedbackList = this.feedbackList.concat(elements2)\n                //))\n            },\n            debug: () => {\n                console.log('clicked')\n            },\n            sameFrame: function() {\n                console.log(\"Same Frame\")\n                //if (!this.active) return;\n                let video = this.$refs.video_source;\n                console.log(video.currentTime);\n                this.pose.send({image: video})\n            },\n            nextFrame: function() {\n                console.log(\"Next Frame\")\n                //if (!this.active) return;\n                let video = this.$refs.video_source;\n                this.$refs.video_source.framerate = 1;\n                video.currentTime += 1;\n                this.pose.send({image: video})\n            },\n            prevFrame: function() {\n                console.log(\"Prev Frame\")\n                //if (!this.active) return;\n                let video = this.$refs.video_source;\n                this.$refs.video_source.framerate = 1;\n                video.currentTime -= 1;\n                this.pose.send({image: video})\n            },\n            getColor(feedback) {\n                if (feedback.score <= 65 && feedback.score > 30) {\n                    return `\n                        background-color: #F4B02A;\n                        color: white;`;\n                }\n                else if (feedback.score > 65) {\n                    return `\n                        background-color: #62C370;\n                        color: white;`;\n                }\n                else return `\n                        background-color: #FE654F;\n                        color: white;`;\n            },\n        },//#003F91, #1B9AAA, (#0B63C1)\n    }\n</script>\n\n<style scoped>\n.switch {\n  position: relative;\n  display: inline-block;\n  width: 60px;\n  height: 34px;\n  vertical-align: middle;\n}\n\n.switch input { \n  opacity: 0;\n  width: 0;\n  height: 0;\n}\n\n.slider {\n  position: absolute;\n  cursor: pointer;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: #ccc;\n  -webkit-transition: .4s;\n  transition: .4s;\n}\n\n.slider:before {\n  position: absolute;\n  content: \"\";\n  height: 26px;\n  width: 26px;\n  left: 4px;\n  bottom: 4px;\n  background-color: white;\n  -webkit-transition: .4s;\n  transition: .4s;\n}\n\ninput:checked + .slider {\n  background-color: #2196F3;\n}\n\ninput:focus + .slider {\n  box-shadow: 0 0 1px #2196F3;\n}\n\ninput:checked + .slider:before {\n  -webkit-transform: translateX(26px);\n  -ms-transform: translateX(26px);\n  transform: translateX(26px);\n}\n\n/* Rounded sliders */\n.slider.round {\n  border-radius: 34px;\n}\n\n.slider.round:before {\n  border-radius: 50%;\n}\n\n#annotation_label{\n    margin: 5% 3%;\n    display:inline-block;\n}\n\n.circle-icon:hover {\n  background-color: #ddd;\n  color: black;\n}\n.circle-icon {\n    background: #f1f1f1;\n    padding:2%;\n    border-radius: 50%;\n    margin: 2%;\n}\n\n.a_button{\n    background: #f1f1f1;\n}\n\n.round {\n  border-radius: 50%;\n}\n\n.controls{\n    text-align:center;\n}\n\n.row70> .col70 > video {\n    max-height: 100%;\n    max-width: 100%;\n    /*border-radius: 16px 0 0 0;*/\n}\n.row {\n  display: flex;\n}\n.column {\n  margin: 0;\n}\n.col70 {\n    flex: 70%;\n}\n.col30{\n    flex: 30%;\n    padding: 1%;\n}\n.row70 {\n    height: 70%;\n}\n.row30{\n    height: 30%;\n    padding: 1%;\n}\n/*.card {\n    position: relative;\n    background: #fff;\n    box-shadow: 0 15px 25px rgba(0,0,0,0.25);\n    border-radius: 16px 16px 16px 16px;\n    justify-content: center;\n    align-items: center;\n    margin: 5%;\n    z-index: 0;\n    text-align:left;\n}\n.card > * {\n    overflow: hidden;\n}*/\n\n.hidden {\n    height: 0;\n}\n\n</style>"]}]}