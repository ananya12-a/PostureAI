{"remainingRequest":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ananyaaggarwal/Desktop/PostureAI/frontend/src/components/upload.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/src/components/upload.vue","mtime":1641666571731},{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CmltcG9ydCB7bWFwR2V0dGVyc30gZnJvbSAndnVleCcKZXhwb3J0IGRlZmF1bHQgewogICAgZGF0YTogKCk9Pih7CiAgICAgICAgdmlkZW86bnVsbCwKICAgICAgICBtZXNzYWdlOiIiLAogICAgfSksCiAgICBtZXRob2RzOnsKICAgICAgICBoYW5kbGUoZXZlbnQpIHsKICAgICAgICAgICAgdGhpcy52aWRlbyA9IGV2ZW50LnRhcmdldC5maWxlcy5sZW5ndGggPiAwID8gZXZlbnQudGFyZ2V0LmZpbGVzWzBdIDogbnVsbDsKICAgICAgICAgICAgY29uc29sZS5sb2coImhhbmRsZSIsIHRoaXMudmlkZW8pCiAgICAgICAgfSwKICAgICAgICB1cGxvYWQoKXsKICAgICAgICAgICAgaWYgKCF0aGlzLnZpZGVvKSByZXR1cm47IAogICAgICAgICAgICBjb25zdCBmb3JtRGF0YU9iaiA9IG5ldyBGb3JtRGF0YSgpOwogICAgICAgICAgICAKICAgICAgICAgICAgZm9ybURhdGFPYmouYXBwZW5kKCJ2aWRlbyIsIHRoaXMudmlkZW8pCiAgICAgICAgICAgIGNvbnNvbGUubG9nKCJ1cGxvYWQiLCBmb3JtRGF0YU9iai5nZXRBbGwoJ3ZpZGVvJykpCiAgICAgICAgICAgIGF4aW9zLnBvc3QoYCR7dGhpcy5iYXNlVVJMfS91cGxvYWQvdXBsb2FkZmlsZWAsIGZvcm1EYXRhT2JqLAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZScgOiAnbXVsdGlwYXJ0L2Zvcm0tZGF0YScKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KQogICAgICAgIH0KICAgIH0sCiAgICBjb21wdXRlZDp7CiAgICAgICAgLi4ubWFwR2V0dGVycyh7YmFzZVVSTDogJ3VybHMvZ2V0VVJMJ30pCiAgICB9Cn0K"},{"version":3,"sources":["upload.vue"],"names":[],"mappings":";;;;;;;;;;;;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"upload.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div>\n        <md-field>\n        <label>Video Upload</label>\n        <md-file name='video' @change=\"handle\" placeholder=\"Upload single video\" accept=\"video/*\" />\n        </md-field>\n        <md-button type=\"submit\" class=\"md-primary\" @click=\"upload\">Upload</md-button>\n        <div class=\"message\">{{message}}</div>\n    </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport {mapGetters} from 'vuex'\nexport default {\n    data: ()=>({\n        video:null,\n        message:\"\",\n    }),\n    methods:{\n        handle(event) {\n            this.video = event.target.files.length > 0 ? event.target.files[0] : null;\n            console.log(\"handle\", this.video)\n        },\n        upload(){\n            if (!this.video) return; \n            const formDataObj = new FormData();\n            \n            formDataObj.append(\"video\", this.video)\n            console.log(\"upload\", formDataObj.getAll('video'))\n            axios.post(`${this.baseURL}/upload/uploadfile`, formDataObj,\n                {\n                    headers: {\n                        'Content-Type' : 'multipart/form-data'\n                    }\n                })\n        }\n    },\n    computed:{\n        ...mapGetters({baseURL: 'urls/getURL'})\n    }\n}\n</script>\n\n<style scoped>\n\n</style>"]}]}