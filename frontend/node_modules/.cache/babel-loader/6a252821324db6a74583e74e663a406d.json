{"remainingRequest":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/babel-loader/lib/index.js!/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ananyaaggarwal/Desktop/PostureAI/frontend/src/components/VideoElementViewer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/src/components/VideoElementViewer.vue","mtime":1640203023968},{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL2FuYW55YWFnZ2Fyd2FsL0Rlc2t0b3AvUG9zdHVyZUFJL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy9pbXBvcnQge1Bvc2UsIFBPU0VfQ09OTkVDVElPTlN9IGZyb20gIkBtZWRpYXBpcGUvcG9zZSI7CmltcG9ydCBlbmdpbmUgZnJvbSAiLi4vYXNzZXRzL2VuZ2luZS5qcyI7IC8vaW1wb3J0IGx1bmdlQW5hbHlzZSBmcm9tICIuLi9hc3NldHMvbHVuZ2VzQW5hbHlzaXMuanMiOwoKaW1wb3J0IHNxdWF0QW5hbHlzZSBmcm9tICIuLi9hc3NldHMvc3F1YXRBbmFseXNpcy5qcyI7CmV4cG9ydCBkZWZhdWx0IHsKICBwcm9wczogewogICAgdmlkZW9TcmM6IFN0cmluZwogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGZlZWRiYWNrTGlzdDogW10sCiAgICAgIHJlc3VsdHM6IFtdLAogICAgICBwb3NlOiAwLAogICAgICBpZDogMSwKICAgICAgYWN0aXZlOiBmYWxzZSwKICAgICAgYW5ub3RhdGlvbnM6IGZhbHNlLAogICAgICBhdmVyYWdlU2NvcmU6IDAuMCwKICAgICAgZXhjZXJjaXNlVHlwZXM6IFsiTHVuZ2VzIiwgIlNpdCB1cHMiLCAiU3F1YXRzIl0sCiAgICAgIGV4Y2VyY2lzZVR5cGU6ICJMdW5nZXMiLAogICAgICB2aWV3OiAiRnJvbnQiLAogICAgICB2aWRlbzogewogICAgICAgIHNvdXJjZUxpbms6ICIiLAogICAgICAgIGNvbXBvbmVudDoge30sCiAgICAgICAgZnJhbWVzOiBbXQogICAgICB9CiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgLy90aGlzLnZpZGVvLnNvdXJjZUxpbmsgPSAiQC9hc3NldHMvc3F1YXRTaWRlLm1wNCI7CiAgICAvL3RoaXMudmlkZW8uY29tcG9uZW50ID0gdmlkZW9qcyh0aGlzLnZpZGVvLnNvdXJjZUxpbmspOwogICAgZW5naW5lLmluaXQoKTsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmCgogICAgdGhpcy5wb3NlID0gbmV3IFBvc2UoewogICAgICBsb2NhdGVGaWxlOiBmdW5jdGlvbiBsb2NhdGVGaWxlKGZpbGUpIHsKICAgICAgICByZXR1cm4gImh0dHBzOi8vY2RuLmpzZGVsaXZyLm5ldC9ucG0vQG1lZGlhcGlwZS9wb3NlLyIuY29uY2F0KGZpbGUpOwogICAgICB9CiAgICB9KTsKICAgIHRoaXMucG9zZS5zZXRPcHRpb25zKHsKICAgICAgbW9kZWxDb21wbGV4aXR5OiAxLAogICAgICBzbW9vdGhMYW5kbWFya3M6IHRydWUsCiAgICAgIG1pbkRldGVjdGlvbkNvbmZpZGVuY2U6IDAuNSwKICAgICAgbWluVHJhY2tpbmdDb25maWRlbmNlOiAwLjUKICAgIH0pOyAvL3RoaXMucG9zZS5vblJlYWR5KGZ1bmN0aW9uKCl7IHRoaXMuYWN0aXZlID0gdHJ1ZSB9KQoKICAgIHRoaXMucG9zZS5vblJlc3VsdHMoZnVuY3Rpb24gKHJlc3VsdCkgewogICAgICBfdGhpcy5mZWVkYmFja0xpc3QgPSBfdGhpcy5yZXN1bHRzID09PSByZXN1bHQ7IC8vZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmCgogICAgICBfdGhpcy5yZXN1bHRzID0gewogICAgICAgIGtleXBvaW50czogcmVzdWx0LnBvc2VMYW5kbWFya3MsCiAgICAgICAgLy9lc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWYKICAgICAgICBQT1NFX0NPTk5FQ1RJT05TOiBQT1NFX0NPTk5FQ1RJT05TLAogICAgICAgIC8vZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmCiAgICAgICAgcGNfbGVuZ3RoOiBQT1NFX0NPTk5FQ1RJT05TLmxlbmd0aCwKICAgICAgICAvL2VzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZgogICAgICAgIGxfbGVuZ3RoOiByZXN1bHQucG9zZUxhbmRtYXJrcy5sZW5ndGgKICAgICAgfTsKICAgICAgZW5naW5lLnVwZGF0ZShfb2JqZWN0U3ByZWFkKHt9LCBfdGhpcy5yZXN1bHRzKSk7IC8vZW5naW5lLnJ1bigpCgogICAgICBzcXVhdEFuYWx5c2UoZW5naW5lKTsKICAgICAgdmFyIG91dHB1dCA9IGVuZ2luZS5nZXRPdXRwdXQoKTsKICAgICAgX3RoaXMuZmVlZGJhY2tMaXN0ID0gW107CiAgICAgIF90aGlzLmF2ZXJhZ2VTY29yZSA9IG91dHB1dC5hdmVyYWdlU2NvcmU7CgogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IG91dHB1dC5mZWF0dXJlcy5sZW5ndGg7IGkrKykgewogICAgICAgIF90aGlzLmZlZWRiYWNrTGlzdFtpXSA9IHsKICAgICAgICAgIGF0dHI6IG91dHB1dC5mZWF0dXJlc1tpXS5hdHRyLAogICAgICAgICAgZmVlZGJhY2s6IG91dHB1dC5mZWF0dXJlc1tpXS5mZWVkYmFjaywKICAgICAgICAgIHNjb3JlOiBvdXRwdXQuZmVhdHVyZXNbaV0uc2NvcmUKICAgICAgICB9OwogICAgICB9IC8vIHVwZGF0ZSBwbG90CiAgICAgIC8vbWFrZSBhIG5ldyBmaWxlLCBjYWxsZWQgcGxvdC5qcywgZnVuY3Rpb25zIGVhY2ggdGFrZSBpbiBhIHJlc3VsdCBvYmplY3QsIGFuZCByZXR1cm4gcGxvdGx5IGdyYXBoCgoKICAgICAgdmFyIGNhbnZhc0VsZW1lbnQgPSBfdGhpcy4kcmVmcy5vdXRwdXRfY2FudmFzOwogICAgICB2YXIgY2FudmFzQ3R4ID0gY2FudmFzRWxlbWVudC5nZXRDb250ZXh0KCcyZCcpOwogICAgICBjYW52YXNDdHguc2F2ZSgpOwogICAgICBjYW52YXNDdHguY2xlYXJSZWN0KDAsIDAsIGNhbnZhc0VsZW1lbnQud2lkdGgsIGNhbnZhc0VsZW1lbnQuaGVpZ2h0KTsgLy8gT25seSBvdmVyd3JpdGUgZXhpc3RpbmcgcGl4ZWxzLgoKICAgICAgY2FudmFzQ3R4Lmdsb2JhbENvbXBvc2l0ZU9wZXJhdGlvbiA9ICdzb3VyY2UtaW4nOwogICAgICBjYW52YXNDdHguZmlsbFN0eWxlID0gJyMwMEZGMDAnOwogICAgICBjYW52YXNDdHguZmlsbFJlY3QoMCwgMCwgY2FudmFzRWxlbWVudC53aWR0aCwgY2FudmFzRWxlbWVudC5oZWlnaHQpOyAvLyBPbmx5IG92ZXJ3cml0ZSBtaXNzaW5nIHBpeGVscy4KCiAgICAgIGNhbnZhc0N0eC5nbG9iYWxDb21wb3NpdGVPcGVyYXRpb24gPSAnZGVzdGluYXRpb24tYXRvcCc7CiAgICAgIGNhbnZhc0N0eC5kcmF3SW1hZ2UocmVzdWx0LmltYWdlLCAwLCAwLCBjYW52YXNFbGVtZW50LndpZHRoLCBjYW52YXNFbGVtZW50LmhlaWdodCk7CgogICAgICBpZiAoIV90aGlzLmFubm90YXRpb25zKSB7CiAgICAgICAgY2FudmFzQ3R4LnJlc3RvcmUoKTsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIGNhbnZhc0N0eC5nbG9iYWxDb21wb3NpdGVPcGVyYXRpb24gPSAnc291cmNlLW92ZXInOyAvL2VzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZgoKICAgICAgZHJhd0Nvbm5lY3RvcnMoY2FudmFzQ3R4LCByZXN1bHQucG9zZUxhbmRtYXJrcywgUE9TRV9DT05ORUNUSU9OUywgewogICAgICAgIGNvbG9yOiAnIzAwRkYwMCcsCiAgICAgICAgbGluZVdpZHRoOiA0CiAgICAgIH0pOyAvL2VzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZgoKICAgICAgZHJhd0xhbmRtYXJrcyhjYW52YXNDdHgsIHJlc3VsdC5wb3NlTGFuZG1hcmtzLCB7CiAgICAgICAgY29sb3I6ICcjRkYwMDAwJywKICAgICAgICBsaW5lV2lkdGg6IDIKICAgICAgfSk7CiAgICAgIGNhbnZhc0N0eC5yZXN0b3JlKCk7CiAgICAgIGNvbnNvbGUubG9nKF90aGlzLiRyZWZzLnZpZGVvX3NvdXJjZS5jdXJyZW50VGltZSk7CiAgICB9KTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGxvYWRGZWVkYmFjazogZnVuY3Rpb24gbG9hZEZlZWRiYWNrKCkgey8vY29uc29sZS5sb2coJ2FzZGZhJykKICAgICAgLy9mZXRjaCgnaHR0cDovL2xvY2FsaG9zdDozMDAwL2NvbmZpZy90ZXN0LWxpc3QnKS50aGVuKGRhdGEgPT4gZGF0YS5qc29uKCkudGhlbigKICAgICAgLy8gICAgZWxlbWVudHMyID0+IHRoaXMuZmVlZGJhY2tMaXN0ID0gdGhpcy5mZWVkYmFja0xpc3QuY29uY2F0KGVsZW1lbnRzMikKICAgICAgLy8pKQogICAgfSwKICAgIGRlYnVnOiBmdW5jdGlvbiBkZWJ1ZygpIHsKICAgICAgY29uc29sZS5sb2coJ2NsaWNrZWQnKTsKICAgIH0sCiAgICBzYW1lRnJhbWU6IGZ1bmN0aW9uIHNhbWVGcmFtZSgpIHsKICAgICAgY29uc29sZS5sb2coIlNhbWUgRnJhbWUiKTsgLy9pZiAoIXRoaXMuYWN0aXZlKSByZXR1cm47CgogICAgICB2YXIgdmlkZW8gPSB0aGlzLiRyZWZzLnZpZGVvX3NvdXJjZTsKICAgICAgY29uc29sZS5sb2codmlkZW8uY3VycmVudFRpbWUpOwogICAgICB0aGlzLnBvc2Uuc2VuZCh7CiAgICAgICAgaW1hZ2U6IHZpZGVvCiAgICAgIH0pOwogICAgfSwKICAgIG5leHRGcmFtZTogZnVuY3Rpb24gbmV4dEZyYW1lKCkgewogICAgICBjb25zb2xlLmxvZygiTmV4dCBGcmFtZSIpOyAvL2lmICghdGhpcy5hY3RpdmUpIHJldHVybjsKCiAgICAgIHZhciB2aWRlbyA9IHRoaXMuJHJlZnMudmlkZW9fc291cmNlOwogICAgICB0aGlzLiRyZWZzLnZpZGVvX3NvdXJjZS5mcmFtZXJhdGUgPSAxOwogICAgICB2aWRlby5jdXJyZW50VGltZSArPSAxOwogICAgICB0aGlzLnBvc2Uuc2VuZCh7CiAgICAgICAgaW1hZ2U6IHZpZGVvCiAgICAgIH0pOwogICAgfSwKICAgIHByZXZGcmFtZTogZnVuY3Rpb24gcHJldkZyYW1lKCkgewogICAgICBjb25zb2xlLmxvZygiUHJldiBGcmFtZSIpOyAvL2lmICghdGhpcy5hY3RpdmUpIHJldHVybjsKCiAgICAgIHZhciB2aWRlbyA9IHRoaXMuJHJlZnMudmlkZW9fc291cmNlOwogICAgICB0aGlzLiRyZWZzLnZpZGVvX3NvdXJjZS5mcmFtZXJhdGUgPSAxOwogICAgICB2aWRlby5jdXJyZW50VGltZSAtPSAxOwogICAgICB0aGlzLnBvc2Uuc2VuZCh7CiAgICAgICAgaW1hZ2U6IHZpZGVvCiAgICAgIH0pOwogICAgfSwKICAgIGdldENvbG9yOiBmdW5jdGlvbiBnZXRDb2xvcihmZWVkYmFjaykgewogICAgICBpZiAoZmVlZGJhY2suc2NvcmUgPD0gNjUgJiYgZmVlZGJhY2suc2NvcmUgPiAzMCkgewogICAgICAgIHJldHVybiAiXG4gICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRjRCMDJBO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6IHdoaXRlOyI7CiAgICAgIH0gZWxzZSBpZiAoZmVlZGJhY2suc2NvcmUgPiA2NSkgewogICAgICAgIHJldHVybiAiXG4gICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNjJDMzcwO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6IHdoaXRlOyI7CiAgICAgIH0gZWxzZSByZXR1cm4gIlxuICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI0ZFNjU0RjtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTsiOwogICAgfQogIH0gLy8jMDAzRjkxLCAjMUI5QUFBLCAoIzBCNjNDMSkKCn07"},{"version":3,"sources":["VideoElementViewer.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <!--split up into components-->\n        <div class=\"row row70\">\n            <div class=\"column col70\">\n                <video  controlsList=\"nodownload nofullscreen noremoteplayback\" :id=\"id\" :key=\"videoSrc\" class=\"hidden\" ref=\"video_source\">\n                    <source src=\"@/assets/squatSide.mp4\" type=\"video/mp4\"/>\n                </video>\n                <canvas width=\"1280px\" height=\"720px\" ref=\"output_canvas\"></canvas>\n            </div>\n            <div class=\"column col30\">\n                <md-list>\n                    <md-subheader> Average Score: {{averageScore}} </md-subheader>\n                    <md-list-item v-for=\"feedback in feedbackList\" v-bind:key=\"feedback.attr\" :style=\"getColor(feedback)\">\n                        <md-icon v-if=\"feedback.score <= 65 && feedback.score > 30\" :style=\"getColor(feedback)\">warning</md-icon>\n                        <md-icon v-else-if=\"feedback.score > 65\" :style=\"getColor(feedback)\">check</md-icon>\n                        <md-icon v-else :style=\"getColor(feedback)\" >error</md-icon>\n                        <span class=\"md-list-item-text\" :style=\"getColor(feedback)\"><strong>{{feedback.attr}}:</strong> {{feedback.feedback}}</span>\n                        <md-tooltip md-direction=\"left\"> <strong> Score:</strong> {{feedback.score}} </md-tooltip>\n                    </md-list-item>\n                </md-list>\n            </div>\n        </div>\n\n        <div class=\"row row30\">\n            <div class=\"column col70\">\n                <canvas :id=\"`graph-${id}`\"/>\n            </div>\n            <div class=\"column col30 controls\">\n                    <a @click=\"prevFrame\" class=\"previous round\"><span class=\"material-icons circle-icon\">fast_rewind</span></a>\n                    <a @click=\"nextFrame\" class=\"next round\"><span class=\"material-icons circle-icon\">fast_forward</span></a>\n\n                    <md-switch v-model=\"annotations\" @change=\"sameFrame\">Annotation</md-switch>\n                    <div>\n                        <md-select v-model=\"excerciseType\" name=\"movie\" id=\"movie\">\n                            <md-option v-for=\"excerciseType in excerciseTypes\" v-bind:key=\"excerciseType\" :value=\"excerciseType\">{{excerciseType}}</md-option>\n                        </md-select>\n                    </div>\n                    <div>\n                        <md-radio v-model=\"view\" value=\"Front\">Front View</md-radio>\n                        <md-radio v-model=\"view\" value=\"Side\">Side View</md-radio>\n                    </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n//import {Pose, POSE_CONNECTIONS} from \"@mediapipe/pose\";\nimport engine from \"../assets/engine.js\";\n//import lungeAnalyse from \"../assets/lungesAnalysis.js\";\nimport squatAnalyse from \"../assets/squatAnalysis.js\";\n    export default {\n        props: {\n            videoSrc : String,\n        },\n        data: function() {\n            return {\n                feedbackList: [],\n                results: [],\n                pose: 0,\n                id: 1,\n                active: false,\n                annotations: false,\n                averageScore: 0.0,\n                excerciseTypes: [\"Lunges\", \"Sit ups\", \"Squats\"],\n                excerciseType: \"Lunges\",\n                view: \"Front\",\n                video: {\n                    sourceLink: \"\",\n                    component: {},\n                    frames: []\n                },\n            }\n        },\n        created: function() {\n            //this.video.sourceLink = \"@/assets/squatSide.mp4\";\n            //this.video.component = videojs(this.video.sourceLink);\n            engine.init();\n            // eslint-disable-next-line no-undef\n            this.pose = new Pose({locateFile: (file) => {\n                    return `https://cdn.jsdelivr.net/npm/@mediapipe/pose/${file}`;\n                }\n            });\n            this.pose.setOptions({\n                modelComplexity: 1,\n                smoothLandmarks: true,\n                minDetectionConfidence: 0.5,\n                minTrackingConfidence: 0.5\n            });\n\n            //this.pose.onReady(function(){ this.active = true })\n\n            this.pose.onResults(result => {\n                this.feedbackList = this.results === result\n                \n                //eslint-disable-next-line no-undef\n                this.results = {\n                    keypoints: result.poseLandmarks, \n                    //eslint-disable-next-line no-undef\n                    POSE_CONNECTIONS: POSE_CONNECTIONS, \n                    //eslint-disable-next-line no-undef\n                    pc_length: POSE_CONNECTIONS.length, \n                    //eslint-disable-next-line no-undef\n                    l_length: result.poseLandmarks.length\n                    }\n                \n                engine.update({...this.results});\n                //engine.run()\n                squatAnalyse(engine)\n\n                const output = engine.getOutput();\n                this.feedbackList = [];\n                this.averageScore = output.averageScore;\n                for(let i = 0; i < output.features.length; i++) {\n                    this.feedbackList[i] = {\n                        attr: output.features[i].attr,\n                        feedback: output.features[i].feedback,\n                        score: output.features[i].score\n                    }\n                }\n\n                // update plot\n                //make a new file, called plot.js, functions each take in a result object, and return plotly graph\n\n                const canvasElement = this.$refs.output_canvas;\n                const canvasCtx = canvasElement.getContext('2d');\n\n                canvasCtx.save();\n                canvasCtx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n\n                // Only overwrite existing pixels.\n                canvasCtx.globalCompositeOperation = 'source-in';\n                canvasCtx.fillStyle = '#00FF00';\n                canvasCtx.fillRect(0, 0, canvasElement.width, canvasElement.height);\n\n                // Only overwrite missing pixels.\n                canvasCtx.globalCompositeOperation = 'destination-atop';\n                canvasCtx.drawImage(\n                    result.image, 0, 0, canvasElement.width, canvasElement.height);\n\n                if (!this.annotations) {\n                    canvasCtx.restore();\n                    return\n                }\n                canvasCtx.globalCompositeOperation = 'source-over';\n                //eslint-disable-next-line no-undef\n                drawConnectors(canvasCtx, result.poseLandmarks, POSE_CONNECTIONS,\n                                {color: '#00FF00', lineWidth: 4});\n                //eslint-disable-next-line no-undef\n                drawLandmarks(canvasCtx, result.poseLandmarks,\n                                {color: '#FF0000', lineWidth: 2});\n                canvasCtx.restore();\n\n                console.log(this.$refs.video_source.currentTime);\n            });\n            \n        },\n        methods: {\n            loadFeedback: function() {\n                //console.log('asdfa')\n                //fetch('http://localhost:3000/config/test-list').then(data => data.json().then(\n                //    elements2 => this.feedbackList = this.feedbackList.concat(elements2)\n                //))\n            },\n            debug: () => {\n                console.log('clicked')\n            },\n            sameFrame: function() {\n                console.log(\"Same Frame\")\n                //if (!this.active) return;\n                let video = this.$refs.video_source;\n                console.log(video.currentTime);\n                this.pose.send({image: video})\n            },\n            nextFrame: function() {\n                console.log(\"Next Frame\")\n                //if (!this.active) return;\n                let video = this.$refs.video_source;\n                this.$refs.video_source.framerate = 1;\n                video.currentTime += 1;\n                this.pose.send({image: video})\n            },\n            prevFrame: function() {\n                console.log(\"Prev Frame\")\n                //if (!this.active) return;\n                let video = this.$refs.video_source;\n                this.$refs.video_source.framerate = 1;\n                video.currentTime -= 1;\n                this.pose.send({image: video})\n            },\n            getColor(feedback) {\n                if (feedback.score <= 65 && feedback.score > 30) {\n                    return `\n                        background-color: #F4B02A;\n                        color: white;`;\n                }\n                else if (feedback.score > 65) {\n                    return `\n                        background-color: #62C370;\n                        color: white;`;\n                }\n                else return `\n                        background-color: #FE654F;\n                        color: white;`;\n            },\n        },//#003F91, #1B9AAA, (#0B63C1)\n    }\n</script>\n\n<style scoped>\n.switch {\n  position: relative;\n  display: inline-block;\n  width: 60px;\n  height: 34px;\n  vertical-align: middle;\n}\n\n.switch input { \n  opacity: 0;\n  width: 0;\n  height: 0;\n}\n\n.slider {\n  position: absolute;\n  cursor: pointer;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: #ccc;\n  -webkit-transition: .4s;\n  transition: .4s;\n}\n\n.slider:before {\n  position: absolute;\n  content: \"\";\n  height: 26px;\n  width: 26px;\n  left: 4px;\n  bottom: 4px;\n  background-color: white;\n  -webkit-transition: .4s;\n  transition: .4s;\n}\n\ninput:checked + .slider {\n  background-color: #2196F3;\n}\n\ninput:focus + .slider {\n  box-shadow: 0 0 1px #2196F3;\n}\n\ninput:checked + .slider:before {\n  -webkit-transform: translateX(26px);\n  -ms-transform: translateX(26px);\n  transform: translateX(26px);\n}\n\n/* Rounded sliders */\n.slider.round {\n  border-radius: 34px;\n}\n\n.slider.round:before {\n  border-radius: 50%;\n}\n\n#annotation_label{\n    margin: 5% 3%;\n    display:inline-block;\n}\n\n.circle-icon:hover {\n  background-color: #ddd;\n  color: black;\n}\n.circle-icon {\n    background: #f1f1f1;\n    padding:2%;\n    border-radius: 50%;\n    margin: 2%;\n}\n\n.a_button{\n    background: #f1f1f1;\n}\n\n.round {\n  border-radius: 50%;\n}\n\n.controls{\n    text-align:center;\n}\n\n.row70> .col70 > video {\n    max-height: 100%;\n    max-width: 100%;\n    /*border-radius: 16px 0 0 0;*/\n}\n.row {\n  display: flex;\n}\n.column {\n  margin: 0;\n}\n.col70 {\n    flex: 70%;\n}\n.col30{\n    flex: 30%;\n    padding: 1%;\n}\n.row70 {\n    height: 70%;\n}\n.row30{\n    height: 30%;\n    padding: 1%;\n}\n/*.card {\n    position: relative;\n    background: #fff;\n    box-shadow: 0 15px 25px rgba(0,0,0,0.25);\n    border-radius: 16px 16px 16px 16px;\n    justify-content: center;\n    align-items: center;\n    margin: 5%;\n    z-index: 0;\n    text-align:left;\n}\n.card > * {\n    overflow: hidden;\n}*/\n\n.hidden {\n    height: 0;\n}\n\n  .md-switch {\n    display: flex;\n  }\n\n\n</style>"],"sourceRoot":"src/components"}]}