{"remainingRequest":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/babel-loader/lib/index.js!/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ananyaaggarwal/Desktop/PostureAI/frontend/src/components/submissions.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/src/components/submissions.vue","mtime":1641903563499},{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL2FuYW55YWFnZ2Fyd2FsL0Rlc2t0b3AvUG9zdHVyZUFJL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKaW1wb3J0IHsgbWFwU3RhdGUsIG1hcEdldHRlcnMsIG1hcE11dGF0aW9ucyB9IGZyb20gJ3Z1ZXgnOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHN0YXJ0RGF0ZTogbnVsbCwKICAgICAgZW5kRGF0ZTogbmV3IERhdGUoKSwKICAgICAgc3RhcnROdW1iZXI6IG51bGwsCiAgICAgIGVuZE51bWJlcjogbnVsbCwKICAgICAgc3VibWlzc2lvbnM6IFtdLAogICAgICB0aW1lc3RhbXBzOiBbXSwKICAgICAgc3ViRGF0YTogW10sCiAgICAgIHNob3dEaWFsb2c6IGZhbHNlLAogICAgICBzdWJEYXRhSWNvbnM6IFt7CiAgICAgICAgaWNvbjogJ2xvY2FsX2ZpcmVfZGVwYXJ0bWVudCcsCiAgICAgICAgbmFtZTogJ2RpZmZpY3VsdHknLAogICAgICAgIHNob3c6ICdEaWZmaWN1bHR5JwogICAgICB9LCB7CiAgICAgICAgaWNvbjogJ2ZpdG5lc3NfY2VudGVyJywKICAgICAgICBuYW1lOiAnZXhlcmNpc2UnLAogICAgICAgIHNob3c6ICdFeGVyY2lzZScKICAgICAgfSwgewogICAgICAgIGljb246ICd2aWRlb2NhbScsCiAgICAgICAgbmFtZTogJ29yaWVudGF0aW9uJywKICAgICAgICBzaG93OiAnT3JpZW50YXRpb24nCiAgICAgIH0sIHsKICAgICAgICBpY29uOiAnc2NvcmUnLAogICAgICAgIG5hbWU6ICdvdmVyYWxsX3Njb3JlJywKICAgICAgICBzaG93OiAnT3ZlcmFsbCBTY29yZScKICAgICAgfSwgewogICAgICAgIGljb246ICdzY2hlZHVsZScsCiAgICAgICAgbmFtZTogJ3NlY29uZHNfYW5hbHlzZWQnLAogICAgICAgIHNob3c6ICdTZWNvbmRzIEFuYWx5c2VkJwogICAgICB9XQogICAgfTsKICB9LAogIGNvbXB1dGVkOiBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoewogICAgbWVzc2FnZUNsYXNzOiBmdW5jdGlvbiBtZXNzYWdlQ2xhc3MoKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgJ21kLWludmFsaWQnOiB0aGlzLmhhc01lc3NhZ2VzCiAgICAgIH07CiAgICB9CiAgfSwgbWFwU3RhdGUoJ2FjY291bnQnLCB7CiAgICB1c2VybmFtZTogZnVuY3Rpb24gdXNlcm5hbWUoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLnVzZXJuYW1lOwogICAgfSwKICAgIHVzZXJJRDogZnVuY3Rpb24gdXNlcklEKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS51c2VySUQ7CiAgICB9LAogICAgdG9rZW46IGZ1bmN0aW9uIHRva2VuKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS50b2tlbjsKICAgIH0KICB9KSksIG1hcEdldHRlcnMoewogICAgYmFzZVVSTDogJ3VybHMvZ2V0VVJMJwogIH0pKSwKICB3YXRjaDogewogICAgc3RhcnROdW1iZXI6IGZ1bmN0aW9uIHN0YXJ0TnVtYmVyKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgaWYgKHRoaXMuc3RhcnROdW1iZXIgIT0gbnVsbCAmJiB0aGlzLmVuZE51bWJlciAhPSBudWxsICYmIHRoaXMuc3RhcnROdW1iZXIgIT0gdW5kZWZpbmVkICYmIHRoaXMuZW5kTnVtYmVyICE9IHVuZGVmaW5lZCkgewogICAgICAgIGNvbnNvbGUubG9nKHRoaXMuYmFzZVVSTCk7CiAgICAgICAgYXhpb3MucG9zdCgiIi5jb25jYXQodGhpcy5iYXNlVVJMLCAiL3N1Ym1pc3Npb24vZ2V0LXN1Ym1pc3Npb24tbGlzdC9udW1iZXIvIikuY29uY2F0KHRoaXMuc3RhcnROdW1iZXIsICIvIikuY29uY2F0KHRoaXMuZW5kTnVtYmVyKSwgewogICAgICAgICAgdXNlcl9pZDogdGhpcy51c2VySUQsCiAgICAgICAgICB0b2tlbjogdGhpcy50b2tlbiwKICAgICAgICAgIHVzZXJuYW1lOiB0aGlzLnVzZXJuYW1lCiAgICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICBfdGhpcy5zdWJtaXNzaW9ucyA9IHJlcy5kYXRhLnN1Ym1pc3Npb25zOwoKICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcmVzLmRhdGEudGltZXN0YW1wcy5sZW5ndGg7IGkrKykgewogICAgICAgICAgICBfdGhpcy50aW1lc3RhbXBzW2ldID0gbmV3IERhdGUocmVzLmRhdGEudGltZXN0YW1wc1tpXSkudG9Mb2NhbGVTdHJpbmcoKTsKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgfQogICAgfSwKICAgIGVuZE51bWJlcjogZnVuY3Rpb24gZW5kTnVtYmVyKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIGlmICh0aGlzLnN0YXJ0TnVtYmVyICE9IG51bGwgJiYgdGhpcy5lbmROdW1iZXIgIT0gbnVsbCAmJiB0aGlzLnN0YXJ0TnVtYmVyICE9IHVuZGVmaW5lZCAmJiB0aGlzLmVuZE51bWJlciAhPSB1bmRlZmluZWQpIHsKICAgICAgICBjb25zb2xlLmxvZyh0aGlzLmJhc2VVUkwpOwogICAgICAgIGF4aW9zLnBvc3QoIiIuY29uY2F0KHRoaXMuYmFzZVVSTCwgIi9zdWJtaXNzaW9uL2dldC1zdWJtaXNzaW9uLWxpc3QvbnVtYmVyLyIpLmNvbmNhdCh0aGlzLnN0YXJ0TnVtYmVyLCAiLyIpLmNvbmNhdCh0aGlzLmVuZE51bWJlciksIHsKICAgICAgICAgIHVzZXJfaWQ6IHRoaXMudXNlcklELAogICAgICAgICAgdG9rZW46IHRoaXMudG9rZW4sCiAgICAgICAgICB1c2VybmFtZTogdGhpcy51c2VybmFtZQogICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgX3RoaXMyLnN1Ym1pc3Npb25zID0gcmVzLmRhdGEuc3VibWlzc2lvbnM7CgogICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCByZXMuZGF0YS50aW1lc3RhbXBzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgIF90aGlzMi50aW1lc3RhbXBzW2ldID0gbmV3IERhdGUocmVzLmRhdGEudGltZXN0YW1wc1tpXSkudG9Mb2NhbGVTdHJpbmcoKTsKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgfQogICAgfSwKICAgIHN0YXJ0RGF0ZTogZnVuY3Rpb24gc3RhcnREYXRlKCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIGNvbnNvbGUubG9nKHRoaXMudXNlcm5hbWUpOwoKICAgICAgaWYgKHRoaXMuc3RhcnREYXRlICE9IG51bGwgJiYgdGhpcy5lbmREYXRlICE9IG51bGwgJiYgdGhpcy5zdGFydERhdGUgIT0gdW5kZWZpbmVkICYmIHRoaXMuZW5kRGF0ZSAhPSB1bmRlZmluZWQpIHsKICAgICAgICBjb25zb2xlLmxvZyh0aGlzLnN0YXJ0RGF0ZSk7CiAgICAgICAgYXhpb3MucG9zdCgiIi5jb25jYXQodGhpcy5iYXNlVVJMLCAiL3N1Ym1pc3Npb24vZ2V0LXN1Ym1pc3Npb24tbGlzdC9kYXRlLyIpLmNvbmNhdCh0aGlzLnN0YXJ0RGF0ZS5nZXRUaW1lKCksICIvIikuY29uY2F0KHRoaXMuZW5kRGF0ZS5nZXRUaW1lKCkpLCB7CiAgICAgICAgICB1c2VyX2lkOiB0aGlzLnVzZXJJRCwKICAgICAgICAgIHRva2VuOiB0aGlzLnRva2VuLAogICAgICAgICAgdXNlcm5hbWU6IHRoaXMudXNlcm5hbWUKICAgICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgIF90aGlzMy5zdWJtaXNzaW9ucyA9IHJlcy5kYXRhLnN1Ym1pc3Npb25zOwogICAgICAgICAgY29uc29sZS5sb2coX3RoaXMzLnN1Ym1pc3Npb25zKTsKCiAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHJlcy5kYXRhLnRpbWVzdGFtcHMubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgX3RoaXMzLnRpbWVzdGFtcHNbaV0gPSBuZXcgRGF0ZShyZXMuZGF0YS50aW1lc3RhbXBzW2ldKS50b0xvY2FsZVN0cmluZygpOwogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICB9CiAgICB9LAogICAgZW5kRGF0ZTogZnVuY3Rpb24gZW5kRGF0ZSgpIHsKICAgICAgdmFyIF90aGlzNCA9IHRoaXM7CgogICAgICBpZiAodGhpcy5zdGFydERhdGUgIT0gbnVsbCAmJiB0aGlzLmVuZERhdGUgIT0gbnVsbCAmJiB0aGlzLnN0YXJ0RGF0ZSAhPSB1bmRlZmluZWQgJiYgdGhpcy5lbmREYXRlICE9IHVuZGVmaW5lZCkgewogICAgICAgIGF4aW9zLnBvc3QoIiIuY29uY2F0KHRoaXMuYmFzZVVSTCwgIi9zdWJtaXNzaW9uL2dldC1zdWJtaXNzaW9uLWxpc3QvZGF0ZS8iKS5jb25jYXQodGhpcy5zdGFydERhdGUuZ2V0VGltZSgpLCAiLyIpLmNvbmNhdCh0aGlzLmVuZERhdGUuZ2V0VGltZSgpKSwgewogICAgICAgICAgdXNlcl9pZDogdGhpcy51c2VySUQsCiAgICAgICAgICB0b2tlbjogdGhpcy50b2tlbiwKICAgICAgICAgIHVzZXJuYW1lOiB0aGlzLnVzZXJuYW1lCiAgICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICBfdGhpczQuc3VibWlzc2lvbnMgPSByZXMuZGF0YS5zdWJtaXNzaW9uczsKICAgICAgICAgIGNvbnNvbGUubG9nKF90aGlzNC5zdWJtaXNzaW9ucyk7CgogICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCByZXMuZGF0YS50aW1lc3RhbXBzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgIF90aGlzNC50aW1lc3RhbXBzW2ldID0gbmV3IERhdGUocmVzLmRhdGEudGltZXN0YW1wc1tpXSkudG9Mb2NhbGVTdHJpbmcoKTsKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgfQogICAgfQogIH0sCiAgbWV0aG9kczogX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHsKICAgIGdldEluZm86IGZ1bmN0aW9uIGdldEluZm8oc3ViSUQpIHsKICAgICAgdmFyIF90aGlzNSA9IHRoaXM7CgogICAgICBheGlvcy5wb3N0KCIiLmNvbmNhdCh0aGlzLmJhc2VVUkwsICIvc3VibWlzc2lvbi9nZXQtc3VibWlzc2lvbi1kYXRhIiksIHsKICAgICAgICB1c2VyX2lkOiB0aGlzLnVzZXJJRCwKICAgICAgICB0b2tlbjogdGhpcy50b2tlbiwKICAgICAgICBzdWJtaXNzaW9uSUQ6IHN1YklECiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIGNvbnNvbGUubG9nKHJlcy5kYXRhKTsgLy9jb25zdCBrZXlzID0gT2JqZWN0LmtleXMocmVzLmRhdGEpCiAgICAgICAgLy9jb25zdCB2YWx1ZXMgPSBPYmplY3QudmFsdWVzKHJlcy5kYXRhKQoKICAgICAgICBfdGhpczUuc3ViRGF0YSA9IHJlcy5kYXRhOyAvL1tdCgogICAgICAgIC8qZm9yIChsZXQgaSA9MDsgaTxrZXlzLmxlbmd0aDtpKyspewogICAgICAgICAgICB0aGlzLmZyaWVuZERhdGEucHVzaCh7ImZpZWxkIjoga2V5c1tpXSwgInZhbHVlIjogdmFsdWVzW2ldfSkKICAgICAgICB9Ki8KCiAgICAgICAgX3RoaXM1LnN1YkRhdGEudGltZXN0YW1wID0gbmV3IERhdGUoX3RoaXM1LnN1YkRhdGEudGltZXN0YW1wICogMTAwMCkudG9Mb2NhbGVTdHJpbmcoKTsKICAgICAgICBjb25zb2xlLmxvZygiaSIsIF90aGlzNS5zdWJEYXRhKTsKICAgICAgfSk7CiAgICB9LAogICAgZGlzYWJsZWREYXRlczogZnVuY3Rpb24gZGlzYWJsZWREYXRlcyhkYXRlKSB7CiAgICAgIC8vY29uc29sZS5sb2codGhpcy5zdGFydERhdGUsIGRhdGUsIGRhdGU+PW5ldyBEYXRlKHRoaXMuc3RhcnREYXRlKSkKICAgICAgcmV0dXJuIGRhdGUgPCBuZXcgRGF0ZSh0aGlzLnN0YXJ0RGF0ZSk7CiAgICB9CiAgfSwgbWFwTXV0YXRpb25zKHsKICAgIHVwZGF0ZVN1YklEOiAnc3VibWlzc2lvbnMvdXBkYXRlU3ViSUQnLAogICAgdXBkYXRlQ3VycmVudFBhZ2U6ICdwYWdlcy91cGRhdGVDdXJyZW50UGFnZScKICB9KSksIHt9LCB7CiAgICB1cGRhdGVDdXJyZW50U3ViOiBmdW5jdGlvbiB1cGRhdGVDdXJyZW50U3ViKHN1YklEKSB7CiAgICAgIHRoaXMudXBkYXRlU3ViSUQoc3ViSUQpOwogICAgICB0aGlzLnVwZGF0ZUN1cnJlbnRQYWdlKCdEYXNoYm9hcmQnKTsKICAgIH0KICB9KQp9Ow=="},{"version":3,"sources":["submissions.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <div class=\"md-layout md-gutter\">\n            <div class=\"md-layout-item\">\n                <span class=\"md-subheading\">Start Date:</span>\n                <md-datepicker v-model=\"startDate\" md-immediately/>\n                <span class=\"md-subheading\">End Date:</span>\n                <md-datepicker v-model=\"endDate\" md-immediately :md-disabled-dates=\"disabledDates\"/>\n            </div>\n            <div class=\"md-layout-item\">\n                <md-field>\n                    <label>Start Number</label>\n                    <md-input v-model=\"startNumber\" type=\"number\"></md-input>\n                    <span class=\"md-error\">There is an error</span>\n                </md-field>\n                <md-field>\n                    <label>End Number</label>\n                    <md-input v-model=\"endNumber\" type=\"number\"></md-input>\n                    <span class=\"md-error\">There is an error</span>\n                </md-field>\n            </div>\n        </div>\n        <md-list>\n            <md-subheader>Submissions</md-subheader>\n            <md-list-item v-for=\"(item, index) in this.submissions\" v-bind:key=\"index\" @click=\"getInfo(item)\">\n                <span class=\"md-list-item-text\" @click=\"showDialog = true\"><b>{{timestamps[index]}} :</b> {{item}}</span>\n                <md-dialog :md-active.sync=\"showDialog\">\n                    <md-dialog-title style=\"text-align:center\">{{subData.timestamp}}</md-dialog-title>\n\n                    <md-tabs md-dynamic-height>\n                        <md-tab md-label=\"Statistics\">\n                            <md-list v-for=\"data in subDataIcons\" v-bind:key=\"data.name\">\n                                <md-list-item>\n                                    <md-icon>{{data.icon}}</md-icon>\n                                    <span class=\"md-list-item-text\">{{data.show}} : {{subData[data.name]}}</span>\n                                </md-list-item>\n                            </md-list>\n                        </md-tab>\n                        <md-tab md-label=\"Video\">\n                            <video  controlsList=\"nodownload nofullscreen\">\n                                <source src=\"@/assets/squatSide.mp4\" type=\"video/mp4\"/>\n                            </video>\n                        </md-tab>\n                    </md-tabs>\n\n                    <md-dialog-actions>\n                        <md-button class=\"md-primary\" @click=\"updateCurrentSub(item)\">Open in Dashboard</md-button>\n                        <md-button class=\"md-primary\" @click=\"showDialog = false\">Close</md-button>\n                    </md-dialog-actions>\n                </md-dialog>\n            </md-list-item>\n        </md-list>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport {mapState, mapGetters, mapMutations} from 'vuex'\nexport default {\n    data: () => ({\n        startDate: null,\n        endDate: new Date(),\n        startNumber: null,\n        endNumber:null,\n        submissions: [],\n        timestamps:[],\n        subData: [],\n        showDialog: false,\n        subDataIcons:[\n            {icon:'local_fire_department', name:'difficulty', show:'Difficulty'},\n            {icon:'fitness_center', name:'exercise', show:'Exercise'},\n            {icon:'videocam', name:'orientation', show:'Orientation'},\n            {icon:'score', name:'overall_score', show:'Overall Score'},\n            {icon:'schedule', name:'seconds_analysed', show:'Seconds Analysed'},\n        ]\n    }),\n    computed: {\n      messageClass () {\n        return {\n          'md-invalid': this.hasMessages\n        }\n      },\n      ...mapState('account', {\n          username: state => state.username,\n          userID: state => state.userID,\n          token: state => state.token,\n      }),\n      \n      ...mapGetters({baseURL: 'urls/getURL'})\n    },\n    watch:{\n        startNumber: function (){\n            \n            if (this.startNumber != null && this.endNumber != null && this.startNumber != undefined && this.endNumber != undefined){\n                console.log(this.baseURL)\n                axios.post(`${this.baseURL}/submission/get-submission-list/number/${this.startNumber}/${this.endNumber}`, {user_id:this.userID, token:this.token, username: this.username})\n                .then((res)=>{\n\n                    this.submissions = res.data.submissions\n                    for (let i=0; i<res.data.timestamps.length;i++){\n                        this.timestamps[i] =  new Date(res.data.timestamps[i]).toLocaleString()\n                    }\n                })\n            }\n        },\n        endNumber: function(){\n            if (this.startNumber != null && this.endNumber != null && this.startNumber != undefined && this.endNumber != undefined){\n                console.log(this.baseURL)\n                axios.post(`${this.baseURL}/submission/get-submission-list/number/${this.startNumber}/${this.endNumber}`, {user_id:this.userID, token:this.token, username: this.username})\n                .then((res)=>{\n                    this.submissions = res.data.submissions\n                    for (let i=0; i<res.data.timestamps.length;i++){\n                        this.timestamps[i] =  new Date(res.data.timestamps[i]).toLocaleString()\n                    }\n                    \n                })\n            }\n        },\n        startDate: function (){\n            console.log(this.username)\n            if (this.startDate != null && this.endDate != null && this.startDate != undefined && this.endDate != undefined){\n                console.log(this.startDate)\n                axios.post(`${this.baseURL}/submission/get-submission-list/date/${this.startDate.getTime()}/${this.endDate.getTime()}`, {user_id:this.userID, token:this.token, username: this.username})\n                .then((res)=>{\n                    this.submissions = res.data.submissions\n                    console.log(this.submissions)\n                    for (let i=0; i<res.data.timestamps.length;i++){\n                        this.timestamps[i] =  new Date(res.data.timestamps[i]).toLocaleString()\n                    }\n                })\n            }\n        },\n        endDate: function(){\n            if (this.startDate != null && this.endDate != null && this.startDate != undefined && this.endDate != undefined){\n                axios.post(`${this.baseURL}/submission/get-submission-list/date/${this.startDate.getTime()}/${this.endDate.getTime()}`, {user_id:this.userID, token:this.token, username: this.username})\n                .then((res)=>{\n                    this.submissions = res.data.submissions\n                    console.log(this.submissions)\n                    for (let i=0; i<res.data.timestamps.length;i++){\n                        this.timestamps[i] =  new Date(res.data.timestamps[i]).toLocaleString()\n                    }\n                    \n                })\n            }\n        }\n    },\n    methods:{\n        getInfo(subID){\n            axios.post(`${this.baseURL}/submission/get-submission-data`, {user_id:this.userID, token:this.token, submissionID: subID})\n            .then((res)=>{\n                console.log(res.data)\n                //const keys = Object.keys(res.data)\n                //const values = Object.values(res.data)\n                this.subData = res.data//[]\n                /*for (let i =0; i<keys.length;i++){\n                    this.friendData.push({\"field\": keys[i], \"value\": values[i]})\n                }*/\n                this.subData.timestamp = new Date(this.subData.timestamp*1000).toLocaleString()\n                console.log(\"i\", this.subData)\n            })\n        },\n        disabledDates(date){\n            //console.log(this.startDate, date, date>=new Date(this.startDate))\n            return date<new Date(this.startDate)\n        },\n        ...mapMutations({updateSubID:'submissions/updateSubID', updateCurrentPage:'pages/updateCurrentPage'}),\n        updateCurrentSub(subID){\n            this.updateSubID(subID)\n            this.updateCurrentPage('Dashboard')\n        },\n        \n    }\n}\n</script>\n\n<style scoped>\n\n</style>"],"sourceRoot":"src/components"}]}