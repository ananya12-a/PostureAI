{"remainingRequest":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/babel-loader/lib/index.js!/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ananyaaggarwal/Desktop/PostureAI/frontend/src/components/friendsList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/src/components/friendsList.vue","mtime":1641672873998},{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL2FuYW55YWFnZ2Fyd2FsL0Rlc2t0b3AvUG9zdHVyZUFJL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKaW1wb3J0IHsgbWFwR2V0dGVycywgbWFwU3RhdGUgfSBmcm9tICd2dWV4JzsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBmcmllbmRzOiBbXSwKICAgICAgZnJpZW5kRGF0YTogW10sCiAgICAgIHNob3dEaWFsb2c6IGZhbHNlLAogICAgICBmcmllbmREYXRhSWNvbnM6IFt7CiAgICAgICAgaWNvbjogJ2xvY2FsX2ZpcmVfZGVwYXJ0bWVudCcsCiAgICAgICAgbmFtZTogJ3N0cmVha3MnLAogICAgICAgIHNob3c6ICdTdHJlYWtzJwogICAgICB9LCB7CiAgICAgICAgaWNvbjogJ2NhbGVuZGFyX3RvZGF5JywKICAgICAgICBuYW1lOiAnZGF5c19hY3RpdmUnLAogICAgICAgIHNob3c6ICdEYXlzIEFjdGl2ZScKICAgICAgfSwgewogICAgICAgIGljb246ICdiYWRnZScsCiAgICAgICAgbmFtZTogJ3R5cGUnLAogICAgICAgIHNob3c6ICdVc2VyIFR5cGUnCiAgICAgIH0sIHsKICAgICAgICBpY29uOiAnaGlzdG9yeScsCiAgICAgICAgbmFtZTogJ3RpbWVzdGFtcCcsCiAgICAgICAgc2hvdzogJ0pvaW5lZCBvbicKICAgICAgfV0KICAgIH07CiAgfSwKICBjb21wdXRlZDogX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBtYXBTdGF0ZSgnYWNjb3VudCcsIHsKICAgIHVzZXJuYW1lOiBmdW5jdGlvbiB1c2VybmFtZShzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUudXNlcm5hbWU7CiAgICB9LAogICAgdXNlcklEOiBmdW5jdGlvbiB1c2VySUQoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLnVzZXJJRDsKICAgIH0sCiAgICB0b2tlbjogZnVuY3Rpb24gdG9rZW4oc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLnRva2VuOwogICAgfQogIH0pKSwgbWFwR2V0dGVycyh7CiAgICBiYXNlVVJMOiAndXJscy9nZXRVUkwnCiAgfSkpLAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIGNvbnNvbGUubG9nKCJ1cmwiLCB0aGlzLmJhc2VVUkwsIHRoaXMudXNlcklEKTsKICAgIGF4aW9zLnBvc3QodGhpcy5iYXNlVVJMICsgIi9zb2NpYWwvZ2V0LWZyaWVuZHMtbGlzdCIsIHsKICAgICAgdXNlcl9pZDogdGhpcy51c2VySUQsCiAgICAgIHRva2VuOiB0aGlzLnRva2VuCiAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgX3RoaXMuZnJpZW5kcyA9IHJlcy5kYXRhLmZyaWVuZHM7CiAgICB9KTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGdldEluZm86IGZ1bmN0aW9uIGdldEluZm8oaW5wdXR0ZWRfdXNlcm5hbWUpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICBheGlvcy5wb3N0KHRoaXMuYmFzZVVSTCArICIvc29jaWFsL2dldC1wdWJsaWMtaW5mbyIsIHsKICAgICAgICB1c2VyX2lkOiB0aGlzLnVzZXJJRCwKICAgICAgICB0b2tlbjogdGhpcy50b2tlbiwKICAgICAgICBmcmllbmR1c2VybmFtZTogaW5wdXR0ZWRfdXNlcm5hbWUKICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgY29uc29sZS5sb2cocmVzLmRhdGEpOyAvL2NvbnN0IGtleXMgPSBPYmplY3Qua2V5cyhyZXMuZGF0YSkKICAgICAgICAvL2NvbnN0IHZhbHVlcyA9IE9iamVjdC52YWx1ZXMocmVzLmRhdGEpCgogICAgICAgIF90aGlzMi5mcmllbmREYXRhID0gcmVzLmRhdGE7IC8vW10KCiAgICAgICAgLypmb3IgKGxldCBpID0wOyBpPGtleXMubGVuZ3RoO2krKyl7CiAgICAgICAgICAgIHRoaXMuZnJpZW5kRGF0YS5wdXNoKHsiZmllbGQiOiBrZXlzW2ldLCAidmFsdWUiOiB2YWx1ZXNbaV19KQogICAgICAgIH0qLwoKICAgICAgICBfdGhpczIuZnJpZW5kRGF0YS50aW1lc3RhbXAgPSBuZXcgRGF0ZShfdGhpczIuZnJpZW5kRGF0YS50aW1lc3RhbXAgKiAxMDAwKS50b0xvY2FsZURhdGVTdHJpbmcoImVuLUlOIik7CiAgICAgICAgY29uc29sZS5sb2coImkiLCBfdGhpczIuZnJpZW5kRGF0YSk7CiAgICAgIH0pOwogICAgfQogIH0KfTs="},{"version":3,"sources":["friendsList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA,OAAA,KAAA,MAAA,OAAA;AACA,SAAA,UAAA,EAAA,QAAA,QAAA,MAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,OAAA,EAAA,EADA;AAEA,MAAA,UAAA,EAAA,EAFA;AAGA,MAAA,UAAA,EAAA,KAHA;AAIA,MAAA,eAAA,EAAA,CACA;AAAA,QAAA,IAAA,EAAA,uBAAA;AAAA,QAAA,IAAA,EAAA,SAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OADA,EAEA;AAAA,QAAA,IAAA,EAAA,gBAAA;AAAA,QAAA,IAAA,EAAA,aAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAFA,EAGA;AAAA,QAAA,IAAA,EAAA,OAAA;AAAA,QAAA,IAAA,EAAA,MAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAHA,EAIA;AAAA,QAAA,IAAA,EAAA,SAAA;AAAA,QAAA,IAAA,EAAA,WAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAJA;AAJA,KAAA;AAAA,GADA;AAYA,EAAA,QAAA,kCACA,QAAA,CAAA,SAAA,EAAA;AACA,IAAA,QAAA,EAAA,kBAAA,KAAA;AAAA,aAAA,KAAA,CAAA,QAAA;AAAA,KADA;AAEA,IAAA,MAAA,EAAA,gBAAA,KAAA;AAAA,aAAA,KAAA,CAAA,MAAA;AAAA,KAFA;AAGA,IAAA,KAAA,EAAA,eAAA,KAAA;AAAA,aAAA,KAAA,CAAA,KAAA;AAAA;AAHA,GAAA,CADA,GAMA,UAAA,CAAA;AAAA,IAAA,OAAA,EAAA;AAAA,GAAA,CANA,CAZA;AAoBA,EAAA,OApBA,qBAoBA;AAAA;;AACA,IAAA,OAAA,CAAA,GAAA,CAAA,KAAA,EAAA,KAAA,OAAA,EAAA,KAAA,MAAA;AACA,IAAA,KAAA,CAAA,IAAA,CAAA,KAAA,OAAA,GAAA,0BAAA,EAAA;AAAA,MAAA,OAAA,EAAA,KAAA,MAAA;AAAA,MAAA,KAAA,EAAA,KAAA;AAAA,KAAA,EACA,IADA,CACA,UAAA,GAAA,EAAA;AACA,MAAA,KAAA,CAAA,OAAA,GAAA,GAAA,CAAA,IAAA,CAAA,OAAA;AACA,KAHA;AAIA,GA1BA;AA2BA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,mBACA,iBADA,EACA;AAAA;;AACA,MAAA,KAAA,CAAA,IAAA,CAAA,KAAA,OAAA,GAAA,yBAAA,EAAA;AAAA,QAAA,OAAA,EAAA,KAAA,MAAA;AAAA,QAAA,KAAA,EAAA,KAAA,KAAA;AAAA,QAAA,cAAA,EAAA;AAAA,OAAA,EACA,IADA,CACA,UAAA,GAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA,IAAA,EADA,CAEA;AACA;;AACA,QAAA,MAAA,CAAA,UAAA,GAAA,GAAA,CAAA,IAAA,CAJA,CAIA;;AACA;AACA;AACA;;AACA,QAAA,MAAA,CAAA,UAAA,CAAA,SAAA,GAAA,IAAA,IAAA,CAAA,MAAA,CAAA,UAAA,CAAA,SAAA,GAAA,IAAA,EAAA,kBAAA,CAAA,OAAA,CAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,GAAA,EAAA,MAAA,CAAA,UAAA;AACA,OAXA;AAYA;AAdA;AA3BA,CAAA","sourcesContent":["<template>\n    <div>\n        <md-list id=\"friendsList\">\n\n            <md-subheader>Your Friends</md-subheader>\n            <md-list-item v-for=\"item in this.friends\" v-bind:key=\"item\" @click=\"getInfo(item)\">\n                <span class=\"md-list-item-text\" @click=\"showDialog = true\">{{item}}</span>\n                <md-dialog :md-active.sync=\"showDialog\">\n                    <md-dialog-title style=\"text-align:center\">{{friendData.username}}</md-dialog-title>\n\n                    <md-tabs md-dynamic-height>\n                        <md-tab md-label=\"Statistics\">\n                            <md-list v-for=\"data in friendDataIcons\" v-bind:key=\"data.name\">\n                                <md-list-item>\n                                    <md-icon>{{data.icon}}</md-icon>\n                                    <span class=\"md-list-item-text\">{{data.show}} : {{friendData[data.name]}}</span>\n                                </md-list-item>\n                            </md-list>\n                        </md-tab>\n                    </md-tabs>\n\n                    <md-dialog-actions>\n                        <md-button class=\"md-primary\" @click=\"showDialog = false\">Close</md-button>\n                    </md-dialog-actions>\n                </md-dialog>\n            </md-list-item>\n        </md-list>\n        <!--<md-list>\n            <md-subheader>Friends of {{this.username}}</md-subheader>\n            <md-list-item v-for=\"item in this.friends\" v-bind:key=\"item\" @click=\"getInfo(item)\">\n\n                <span class=\"md-list-item-text\">{{item}}</span>\n            </md-list-item>\n        </md-list>-->\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport {mapGetters, mapState} from 'vuex';\nexport default {\n    data: () =>({\n        friends: [],\n        friendData: [],\n        showDialog: false,\n        friendDataIcons:[\n            {icon:'local_fire_department', name:'streaks', show:'Streaks'},\n            {icon:'calendar_today', name:'days_active', show:'Days Active'},\n            {icon: 'badge', name:'type', show:'User Type'},\n            {icon:'history', name:'timestamp', show:'Joined on'}\n        ]\n    }),\n    computed:{\n        ...mapState('account', {\n            username: state => state.username,\n            userID: state => state.userID,\n            token: state => state.token,\n        }),\n        ...mapGetters({baseURL: 'urls/getURL'})\n    },\n    mounted(){\n        console.log(\"url\", this.baseURL, this.userID)\n        axios.post(this.baseURL+\"/social/get-friends-list\", {user_id:this.userID, token:this.token})\n        .then((res)=>{\n            this.friends = res.data.friends\n        })\n    },\n    methods:{\n        getInfo(inputted_username){\n            axios.post(this.baseURL+\"/social/get-public-info\", {user_id:this.userID, token:this.token, friendusername: inputted_username})\n            .then((res)=>{\n                console.log(res.data)\n                //const keys = Object.keys(res.data)\n                //const values = Object.values(res.data)\n                this.friendData = res.data//[]\n                /*for (let i =0; i<keys.length;i++){\n                    this.friendData.push({\"field\": keys[i], \"value\": values[i]})\n                }*/\n                this.friendData.timestamp = new Date(this.friendData.timestamp*1000).toLocaleDateString(\"en-IN\")\n                console.log(\"i\", this.friendData)\n            })\n        }\n    }\n}\n</script>\n\n<style scoped>\n#friendsList {\n    width: 320px;\n    max-width: 100%;\n    display: inline-block;\n    vertical-align: top;\n    border: 1px solid rgba(#000, .12);\n  }\n</style>"],"sourceRoot":"src/components"}]}