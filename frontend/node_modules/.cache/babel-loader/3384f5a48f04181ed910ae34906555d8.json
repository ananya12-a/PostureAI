{"remainingRequest":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/babel-loader/lib/index.js!/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ananyaaggarwal/Desktop/PostureAI/frontend/src/components/signup.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/src/components/signup.vue","mtime":1641491054523},{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9hbmFueWFhZ2dhcndhbC9EZXNrdG9wL1Bvc3R1cmVBSS9mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBlcnJvcjogZmFsc2UsCiAgICAgIG1lc3NhZ2U6ICIiLAogICAgICB1c2VybmFtZTogIiIsCiAgICAgIHBhc3N3b3JkOiAiIiwKICAgICAgZW1haWw6ICIiLAogICAgICB1c2VybmFtZUVycm9yOiBmYWxzZSwKICAgICAgdXNlcm5hbWVFcnJvck1lc3NhZ2U6ICIiCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIG1lc3NhZ2VDbGFzczogZnVuY3Rpb24gbWVzc2FnZUNsYXNzKCkgewogICAgICByZXR1cm4gewogICAgICAgICdtZC1pbnZhbGlkJzogdGhpcy5lcnJvcgogICAgICB9OwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgdXNlcm5hbWVFeGlzdHM6IGZ1bmN0aW9uIHVzZXJuYW1lRXhpc3RzKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBheGlvcy5nZXQoImh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9hY2NvdW50L3NpZ251cC1oZWxwZXIvdXNlcm5hbWUvIiArIF90aGlzLnVzZXJuYW1lKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgX3RoaXMudXNlcm5hbWVFcnJvciA9ICFfY29udGV4dC5zZW50LmV4aXN0czsKCiAgICAgICAgICAgICAgICBpZiAoX3RoaXMudXNlcm5hbWVFcnJvcikgewogICAgICAgICAgICAgICAgICBfdGhpcy51c2VybmFtZUVycm9yTWVzc2FnZSA9ICJVc2VybmFtZSBBbHJlYWR5IEV4aXN0cyEiOwogICAgICAgICAgICAgICAgfSAvL2lmIHlvdSB3YW50IHRvIHB1dCByZXF1aXJlbWVudHMgZm9yIHVzZXJuYW1lKHZlcmlmaWNhdGlvbikgZGlmZmVyZW50IGlmcwoKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIHNpZ251cDogZnVuY3Rpb24gc2lnbnVwKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHZhciB1c2VybmFtZSA9IHRoaXMudXNlcm5hbWU7CiAgICAgIHZhciBwYXNzd29yZCA9IHRoaXMucGFzc3dvcmQ7CiAgICAgIHZhciBlbWFpbCA9IHRoaXMuZW1haWw7CiAgICAgIGF4aW9zLnBvc3QoImh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9hY2NvdW50L3NpZ251cCIsIHsKICAgICAgICB1c2VybmFtZTogdXNlcm5hbWUsCiAgICAgICAgcGFzc3dvcmQ6IHBhc3N3b3JkLAogICAgICAgIGVtYWlsOiBlbWFpbAogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBpZiAocmVzLmRhdGEuc3RhdHVzKSB7CiAgICAgICAgICBfdGhpczIuZXJyb3IgPSBmYWxzZTsKCiAgICAgICAgICBfdGhpczIuJGVtaXQoJ3NpZ25lZHVwJywgewogICAgICAgICAgICB1c2VybmFtZTogdXNlcm5hbWUsCiAgICAgICAgICAgIHBhc3N3b3JkOiBwYXNzd29yZCwKICAgICAgICAgICAgdXNlcl9pZDogcmVzLmRhdGEudXNlcl9pZCwKICAgICAgICAgICAgdG9rZW46IHJlcy5kYXRhLnRva2VuCiAgICAgICAgICB9KTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgY29uc29sZS5sb2coInVuc3VjY2Vzc2Z1bCIpOwogICAgICAgICAgX3RoaXMyLmVycm9yID0gdHJ1ZTsKICAgICAgICB9CgogICAgICAgIGNvbnNvbGUubG9nKHJlcy5zdGF0dXMpOwogICAgICAgIGNvbnNvbGUubG9nKHJlcy5kYXRhKTsKICAgICAgfSk7CiAgICAgIC8qLmNhdGNoKChlcnIpID0+IHsKICAgICAgICAgIGNvbnN0IHJlcyA9IGVyci5yZXNwb25zZTsKICAgICAgICAgIGNvbnNvbGUubG9nKCJ1bnN1Y2Nlc3NmdWwiKQogICAgICAgICAgdGhpcy5lcnJvciA9IHRydWU7CiAgICAgICAgICBjb25zb2xlLmxvZyhyZXMpCiAgICAgICAgICB0aGlzLm1lc3NhZ2UgPSByZXMuZGF0YSA/IHJlcy5kYXRhLmVycm9yID8gcmVzLmRhdGEuZXJyb3IgOiAiIiA6ICIiOwogICAgICB9KSovCiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["signup.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,OAAA,KAAA,MAAA,OAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,KAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA,EAFA;AAGA,MAAA,QAAA,EAAA,EAHA;AAIA,MAAA,QAAA,EAAA,EAJA;AAKA,MAAA,KAAA,EAAA,EALA;AAMA,MAAA,aAAA,EAAA,KANA;AAOA,MAAA,oBAAA,EAAA;AAPA,KAAA;AAAA,GADA;AAUA,EAAA,QAAA,EAAA;AACA,IAAA,YADA,0BACA;AACA,aAAA;AACA,sBAAA,KAAA;AADA,OAAA;AAGA;AALA,GAVA;AAiBA,EAAA,OAAA,EAAA;AACA,IAAA,cADA,4BACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,KAAA,CAAA,GAAA,CAAA,0DAAA,KAAA,CAAA,QAAA,CADA;;AAAA;AACA,gBAAA,KAAA,CAAA,aADA,kBACA,MADA;;AAEA,oBAAA,KAAA,CAAA,aAAA,EAAA;AACA,kBAAA,KAAA,CAAA,oBAAA,GAAA,0BAAA;AACA,iBAJA,CAIA;;;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA,KANA;AAOA,IAAA,MAPA,oBAOA;AAAA;;AACA,UAAA,QAAA,GAAA,KAAA,QAAA;AACA,UAAA,QAAA,GAAA,KAAA,QAAA;AACA,UAAA,KAAA,GAAA,KAAA,KAAA;AAEA,MAAA,KAAA,CAAA,IAAA,CAAA,sCAAA,EAAA;AACA,QAAA,QAAA,EAAA,QADA;AAEA,QAAA,QAAA,EAAA,QAFA;AAGA,QAAA,KAAA,EAAA;AAHA,OAAA,EAKA,IALA,CAKA,UAAA,GAAA,EAAA;AACA,YAAA,GAAA,CAAA,IAAA,CAAA,MAAA,EAAA;AACA,UAAA,MAAA,CAAA,KAAA,GAAA,KAAA;;AACA,UAAA,MAAA,CAAA,KAAA,CAAA,UAAA,EAAA;AAAA,YAAA,QAAA,EAAA,QAAA;AAAA,YAAA,QAAA,EAAA,QAAA;AAAA,YAAA,OAAA,EAAA,GAAA,CAAA,IAAA,CAAA,OAAA;AAAA,YAAA,KAAA,EAAA,GAAA,CAAA,IAAA,CAAA;AAAA,WAAA;AACA,SAHA,MAIA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,cAAA;AACA,UAAA,MAAA,CAAA,KAAA,GAAA,IAAA;AACA;;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA,MAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA,IAAA;AACA,OAhBA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApCA;AAjBA,CAAA","sourcesContent":["<template>\n    <div>\n        <md-field :class=\"error || usernameError ? 'md-invalid' : ''\">\n            <label>Username</label>\n            <md-input v-model=\"username\" autofocus @change=\"usernameExists\"></md-input>\n            <!--<span class=\"md-error\">Invalid Login</span>-->\n        </md-field>\n        <div class = \"error\" v-if=\"usernameError\">\n            {{usernameErrorMessage}}\n        </div>\n\n        <md-field :class=\"messageClass\">\n            <label>Email</label>\n            <md-input v-model=\"email\" type=\"email\"></md-input>\n            <!--<span class=\"md-error\">Invalid Login</span>-->\n        </md-field>\n\n        <md-field md-has-password :class=\"messageClass\">\n          <label>Password</label>\n          <md-input v-model=\"password\" type=\"password\"></md-input>\n          <!--<span class=\"md-error\">Invalid Login</span>-->\n        </md-field>\n\n        <div class = \"error\" v-if=\"error\">\n            {{message}}\n        </div>\n\n        <div style=\"text-align:center\">\n            <md-button class=\"md-raised md-primary\" @click=\"signup\">Sign Up</md-button>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nexport default {\n    data: ()=>({\n        error:false,\n        message:\"\",\n        username:\"\",\n        password:\"\",\n        email:\"\",\n        usernameError: false,\n        usernameErrorMessage: \"\",\n    }),\n    computed: {\n        messageClass () {\n                        return {\n                            'md-invalid': this.error\n                        }\n                    }\n    },\n    methods:{\n        async usernameExists() {\n            this.usernameError = !(await axios.get(\"http://localhost:3000/account/signup-helper/username/\" + this.username)).exists;\n            if (this.usernameError) {\n                this.usernameErrorMessage = \"Username Already Exists!\";\n            }//if you want to put requirements for username(verification) different ifs\n        },\n        signup() {\n            const username = this.username\n            const password = this.password\n            const email = this.email\n\n            axios.post(\"http://localhost:3000/account/signup\", {\n              username,\n              password,\n              email\n            })\n            .then((res) => {\n                if (res.data.status){\n                    this.error=false;\n                    this.$emit('signedup', {username, password, user_id: res.data.user_id, token: res.data.token})\n                }\n                else{\n                    console.log(\"unsuccessful\")\n                    this.error = true\n                }\n                console.log(res.status)\n                console.log(res.data)\n            })\n            /*.catch((err) => {\n                const res = err.response;\n                console.log(\"unsuccessful\")\n                this.error = true;\n                console.log(res)\n                this.message = res.data ? res.data.error ? res.data.error : \"\" : \"\";\n            })*/\n        }\n    }\n}\n</script>\n\n<style scoped>\n.error {\n    color: red;\n}\n</style>"],"sourceRoot":"src/components"}]}