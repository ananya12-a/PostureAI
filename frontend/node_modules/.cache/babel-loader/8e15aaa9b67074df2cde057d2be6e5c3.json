{"remainingRequest":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/babel-loader/lib/index.js!/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ananyaaggarwal/Desktop/PostureAI/frontend/src/components/upload.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/src/components/upload.vue","mtime":1641903599373},{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL2FuYW55YWFnZ2Fyd2FsL0Rlc2t0b3AvUG9zdHVyZUFJL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsKaW1wb3J0IHsgbWFwR2V0dGVycywgbWFwU3RhdGUsIG1hcE11dGF0aW9ucyB9IGZyb20gJ3Z1ZXgnOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHZpZGVvOiBudWxsLAogICAgICBtZXNzYWdlOiAiIiwKICAgICAgZXhjZXJjaXNlVHlwZXM6IHsKICAgICAgICBzaWRlOiBbIkx1bmdlIChTaWRlKSIsICJTcXVhdCAoU2lkZSkiXSwKICAgICAgICBmcm9udDogWyJTaWRlIEx1bmdlIChGcm9udCkiXQogICAgICB9LAogICAgICBleGNlcmNpc2VUeXBlTmFtZTogIkx1bmdlIChTaWRlKSIKICAgIH07CiAgfSwKICBtZXRob2RzOiBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoewogICAgaGFuZGxlOiBmdW5jdGlvbiBoYW5kbGUoZXZlbnQpIHsKICAgICAgdGhpcy52aWRlbyA9IGV2ZW50LnRhcmdldC5maWxlcy5sZW5ndGggPiAwID8gZXZlbnQudGFyZ2V0LmZpbGVzWzBdIDogbnVsbDsgLy9jb25zb2xlLmxvZygiaGFuZGxlIiwgdGhpcy52aWRlbykKICAgIH0KICB9LCBtYXBNdXRhdGlvbnMoewogICAgdXBkYXRlU3ViSUQ6ICdzdWJtaXNzaW9ucy91cGRhdGVTdWJJRCcsCiAgICB1cGRhdGVDdXJyZW50UGFnZTogJ3BhZ2VzL3VwZGF0ZUN1cnJlbnRQYWdlJwogIH0pKSwge30sIHsKICAgIHVwZGF0ZUN1cnJlbnRTdWI6IGZ1bmN0aW9uIHVwZGF0ZUN1cnJlbnRTdWIoc3ViSUQpIHsKICAgICAgdGhpcy51cGRhdGVTdWJJRChzdWJJRCk7CiAgICAgIHRoaXMudXBkYXRlQ3VycmVudFBhZ2UoJ0Rhc2hib2FyZCcpOwogICAgfSwKICAgIHVwbG9hZDogZnVuY3Rpb24gdXBsb2FkKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgaWYgKCF0aGlzLnZpZGVvKSByZXR1cm47CiAgICAgIHZhciBmb3JtRGF0YU9iaiA9IG5ldyBGb3JtRGF0YSgpOwogICAgICBmb3JtRGF0YU9iai5hcHBlbmQoInZpZGVvIiwgdGhpcy52aWRlbyk7IC8vY29uc29sZS5sb2coInVwbG9hZCIsIGZvcm1EYXRhT2JqLmdldEFsbCgndmlkZW8nKSwgdGhpcy51c2VySUQsIHRoaXMuZXhjZXJjaXNlVHlwZU5hbWUpCgogICAgICBheGlvcy5wb3N0KCIiLmNvbmNhdCh0aGlzLmJhc2VVUkwsICIvdXBsb2FkL3VwbG9hZGZpbGUvIikuY29uY2F0KHRoaXMudXNlcklELCAiLyIpLmNvbmNhdCh0aGlzLmV4Y2VyY2lzZVR5cGVOYW1lKSwgZm9ybURhdGFPYmosIHsKICAgICAgICAnQ29udGVudC1UeXBlJzogJ211bHRpcGFydC9mb3JtLWRhdGEnCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIGlmIChyZXMuc3RhdHVzID09PSAyMDAgJiYgcmVzLmRhdGEgJiYgcmVzLmRhdGEuc3ViSUQpIHsKICAgICAgICAgIGNvbnNvbGUubG9nKHJlcy5kYXRhKTsKCiAgICAgICAgICBfdGhpcy51cGRhdGVDdXJyZW50U3ViKHJlcy5kYXRhLnN1YklEKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfQogIH0pLAogIGNvbXB1dGVkOiBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIG1hcEdldHRlcnMoewogICAgYmFzZVVSTDogJ3VybHMvZ2V0VVJMJwogIH0pKSwgbWFwU3RhdGUoJ2FjY291bnQnLCB7CiAgICB1c2VybmFtZTogZnVuY3Rpb24gdXNlcm5hbWUoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLnVzZXJuYW1lOwogICAgfSwKICAgIHVzZXJJRDogZnVuY3Rpb24gdXNlcklEKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS51c2VySUQ7CiAgICB9LAogICAgdG9rZW46IGZ1bmN0aW9uIHRva2VuKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS50b2tlbjsKICAgIH0KICB9KSkKfTs="},{"version":3,"sources":["upload.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA,OAAA,KAAA,MAAA,OAAA;AACA,SAAA,UAAA,EAAA,QAAA,EAAA,YAAA,QAAA,MAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,KAAA,EAAA,IADA;AAEA,MAAA,OAAA,EAAA,EAFA;AAGA,MAAA,cAAA,EAAA;AAAA,QAAA,IAAA,EAAA,CAAA,cAAA,EAAA,cAAA,CAAA;AAAA,QAAA,KAAA,EAAA,CAAA,oBAAA;AAAA,OAHA;AAIA,MAAA,iBAAA,EAAA;AAJA,KAAA;AAAA,GADA;AAOA,EAAA,OAAA;AACA,IAAA,MADA,kBACA,KADA,EACA;AACA,WAAA,KAAA,GAAA,KAAA,CAAA,MAAA,CAAA,KAAA,CAAA,MAAA,GAAA,CAAA,GAAA,KAAA,CAAA,MAAA,CAAA,KAAA,CAAA,CAAA,CAAA,GAAA,IAAA,CADA,CAEA;AACA;AAJA,KAKA,YAAA,CAAA;AAAA,IAAA,WAAA,EAAA,yBAAA;AAAA,IAAA,iBAAA,EAAA;AAAA,GAAA,CALA;AAMA,IAAA,gBANA,4BAMA,KANA,EAMA;AACA,WAAA,WAAA,CAAA,KAAA;AACA,WAAA,iBAAA,CAAA,WAAA;AACA,KATA;AAUA,IAAA,MAVA,oBAUA;AAAA;;AACA,UAAA,CAAA,KAAA,KAAA,EAAA;AACA,UAAA,WAAA,GAAA,IAAA,QAAA,EAAA;AACA,MAAA,WAAA,CAAA,MAAA,CAAA,OAAA,EAAA,KAAA,KAAA,EAHA,CAIA;;AACA,MAAA,KAAA,CAAA,IAAA,WAAA,KAAA,OAAA,gCAAA,KAAA,MAAA,cAAA,KAAA,iBAAA,GACA,WADA,EAEA;AACA,wBAAA;AADA,OAFA,EAKA,IALA,CAKA,UAAA,GAAA,EAAA;AACA,YAAA,GAAA,CAAA,MAAA,KAAA,GAAA,IAAA,GAAA,CAAA,IAAA,IAAA,GAAA,CAAA,IAAA,CAAA,KAAA,EAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA,IAAA;;AACA,UAAA,KAAA,CAAA,gBAAA,CAAA,GAAA,CAAA,IAAA,CAAA,KAAA;AACA;AACA,OAVA;AAWA;AA1BA,IAPA;AAqCA,EAAA,QAAA,kCACA,UAAA,CAAA;AAAA,IAAA,OAAA,EAAA;AAAA,GAAA,CADA,GAEA,QAAA,CAAA,SAAA,EAAA;AACA,IAAA,QAAA,EAAA,kBAAA,KAAA;AAAA,aAAA,KAAA,CAAA,QAAA;AAAA,KADA;AAEA,IAAA,MAAA,EAAA,gBAAA,KAAA;AAAA,aAAA,KAAA,CAAA,MAAA;AAAA,KAFA;AAGA,IAAA,KAAA,EAAA,eAAA,KAAA;AAAA,aAAA,KAAA,CAAA,KAAA;AAAA;AAHA,GAAA,CAFA;AArCA,CAAA","sourcesContent":["<template>\n    <div>\n        <div class=\"md-layout\">\n            <div class=\"md-layout-item\">\n                <md-field>\n                <label>Video Upload</label>\n                <md-file name='video' @change=\"handle\" placeholder=\"Upload single video\" accept=\"video/*\" />\n                </md-field>\n                <md-button type=\"submit\" class=\"md-primary\" @click=\"upload\">Upload</md-button>\n                <div class=\"message\">{{message}}</div>\n            </div>\n            <div class=\"md-layout-item\" style=\"padding-left:5%\">\n                <md-field>\n                    <md-select v-model=\"excerciseTypeName\" placeholder=\"Exercise Name\"> \n                        <md-optgroup label=\"Side View\">\n                            <md-option v-for=\"excerciseType in excerciseTypes.side\" v-bind:key=\"excerciseType\" :value=\"excerciseType\">{{excerciseType}}</md-option>\n                        </md-optgroup>\n                        <md-optgroup label=\"Front View\">\n                            <md-option v-for=\"excerciseType in excerciseTypes.front\" v-bind:key=\"excerciseType\" :value=\"excerciseType\">{{excerciseType}}</md-option>\n                        </md-optgroup>\n                    </md-select>\n                </md-field>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport {mapGetters, mapState, mapMutations} from 'vuex'\nexport default {\n    data: ()=>({\n        video:null,\n        message:\"\",\n        excerciseTypes: {side: [\"Lunge (Side)\", \"Squat (Side)\"], front: [\"Side Lunge (Front)\"]},\n        excerciseTypeName:\"Lunge (Side)\",\n    }),\n    methods:{\n        handle(event) {\n            this.video = event.target.files.length > 0 ? event.target.files[0] : null;\n            //console.log(\"handle\", this.video)\n        },\n        ...mapMutations({updateSubID:'submissions/updateSubID', updateCurrentPage:'pages/updateCurrentPage'}),\n        updateCurrentSub(subID){\n            this.updateSubID(subID)\n            this.updateCurrentPage('Dashboard')\n        },\n        upload(){\n            if (!this.video) return; \n            const formDataObj = new FormData();\n            formDataObj.append(\"video\", this.video)\n            //console.log(\"upload\", formDataObj.getAll('video'), this.userID, this.excerciseTypeName)\n            axios.post(`${this.baseURL}/upload/uploadfile/${this.userID}/${this.excerciseTypeName}`, \n                formDataObj,\n                {\n                    'Content-Type': 'multipart/form-data'\n                })\n                .then((res) => {\n                    if (res.status === 200 && res.data && res.data.subID) {\n                        console.log(res.data)\n                        this.updateCurrentSub(res.data.subID)\n                    }\n                })\n        },\n        \n        \n    },\n    computed:{\n        ...mapGetters({baseURL: 'urls/getURL'}),\n        ...mapState('account', {\n            username: state => state.username,\n            userID: state => state.userID,\n            token: state => state.token,\n        }),\n    }\n}\n</script>\n\n<style scoped>\n\n</style>"],"sourceRoot":"src/components"}]}