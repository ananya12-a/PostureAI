{"remainingRequest":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/babel-loader/lib/index.js!/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ananyaaggarwal/Desktop/PostureAI/frontend/src/components/signup.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/src/components/signup.vue","mtime":1641669846499},{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ananyaaggarwal/Desktop/PostureAI/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9hbmFueWFhZ2dhcndhbC9EZXNrdG9wL1Bvc3R1cmVBSS9mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBfb2JqZWN0U3ByZWFkIGZyb20gIi9Vc2Vycy9hbmFueWFhZ2dhcndhbC9EZXNrdG9wL1Bvc3R1cmVBSS9mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLm1hdGNoLmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiOwppbXBvcnQgeyBtYXBHZXR0ZXJzIH0gZnJvbSAidnVleCI7CmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZXJyb3I6IGZhbHNlLAogICAgICBtZXNzYWdlOiAiIiwKICAgICAgdXNlcm5hbWU6ICIiLAogICAgICBwYXNzd29yZDogIiIsCiAgICAgIGVtYWlsOiAiIiwKICAgICAgdXNlcm5hbWVFcnJvcjogZmFsc2UsCiAgICAgIHVzZXJuYW1lRXJyb3JNZXNzYWdlOiAiIiwKICAgICAgZW1haWxFcnJvcjogZmFsc2UsCiAgICAgIGVtYWlsRXJyb3JNZXNzYWdlOiAiIiwKICAgICAgZW1haWxSZWdleDogL15cdysoWy1dP1x3KykqQFx3KyhbLV0/XHcrKSooXHd7MiwzfSkrJC8sCiAgICAgIHBhc3N3b3JkRXJyb3I6IGZhbHNlLAogICAgICBwYXNzd29yZEVycm9yTWVzc2FnZTogIiIsCiAgICAgIHBhc3N3b3JkUmVnZXg6IC9eKD89LipbYS16XSkoPz0uKltBLVpdKSg/PS4qXGQpW2EtekEtWlxkXXs4LH0kLwogICAgfTsKICB9LAogIGNvbXB1dGVkOiBfb2JqZWN0U3ByZWFkKHsKICAgIG1lc3NhZ2VDbGFzczogZnVuY3Rpb24gbWVzc2FnZUNsYXNzKCkgewogICAgICByZXR1cm4gewogICAgICAgICdtZC1pbnZhbGlkJzogdGhpcy5lcnJvcgogICAgICB9OwogICAgfQogIH0sIG1hcEdldHRlcnMoewogICAgYmFzZVVSTDogJ3VybHMvZ2V0VVJMJwogIH0pKSwKICBtZXRob2RzOiB7CiAgICB1c2VybmFtZUV4aXN0czogZnVuY3Rpb24gdXNlcm5hbWVFeGlzdHMoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLmdldChfdGhpcy5iYXNlVVJMICsgIi9hY2NvdW50L3NpZ251cC1oZWxwZXIvdXNlcm5hbWUvIiArIF90aGlzLnVzZXJuYW1lKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgX3RoaXMudXNlcm5hbWVFcnJvciA9IF9jb250ZXh0LnNlbnQuZGF0YS5leGlzdHM7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhfdGhpcy51c2VybmFtZUVycm9yKTsKCiAgICAgICAgICAgICAgICBpZiAoX3RoaXMudXNlcm5hbWVFcnJvcikgewogICAgICAgICAgICAgICAgICBfdGhpcy51c2VybmFtZUVycm9yTWVzc2FnZSA9ICJVc2VybmFtZSBBbHJlYWR5IEV4aXN0cyEiOwogICAgICAgICAgICAgICAgfSAvL2lmIHlvdSB3YW50IHRvIHB1dCByZXF1aXJlbWVudHMgZm9yIHVzZXJuYW1lKHZlcmlmaWNhdGlvbikgZGlmZmVyZW50IGlmcwoKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGVtYWlsRXhpc3RzOiBmdW5jdGlvbiBlbWFpbEV4aXN0cygpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLmdldChfdGhpczIuYmFzZVVSTCArICIvYWNjb3VudC9zaWdudXAtaGVscGVyL2VtYWlsLyIgKyBfdGhpczIuZW1haWwpOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICBfdGhpczIuZW1haWxFcnJvciA9IF9jb250ZXh0Mi5zZW50LmRhdGEuZXhpc3RzOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coX3RoaXMyLmVtYWlsRXJyb3IsIF90aGlzMi5lbWFpbCk7CgogICAgICAgICAgICAgICAgaWYgKF90aGlzMi5lbWFpbEVycm9yKSB7CiAgICAgICAgICAgICAgICAgIF90aGlzMi5lbWFpbEVycm9yTWVzc2FnZSA9ICJFbWFpbCBBbHJlYWR5IFJlZ2lzdGVyZWQhIjsKICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoIV90aGlzMi5lbWFpbC5tYXRjaChfdGhpczIuZW1haWxSZWdleCkpIHsKICAgICAgICAgICAgICAgICAgX3RoaXMyLmVtYWlsRXJyb3IgPSB0cnVlOwogICAgICAgICAgICAgICAgICBfdGhpczIuZW1haWxFcnJvck1lc3NhZ2UgPSAiTm90IGEgdmFsaWQgZW1haWwiOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBwYXNzd29yZFZlcmlmaWNhdGlvbjogZnVuY3Rpb24gcGFzc3dvcmRWZXJpZmljYXRpb24oKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoKSB7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGlmICghX3RoaXMzLnBhc3N3b3JkLm1hdGNoKF90aGlzMy5wYXNzd29yZFJlZ2V4KSkgewogICAgICAgICAgICAgICAgICBfdGhpczMucGFzc3dvcmRFcnJvciA9IHRydWU7CiAgICAgICAgICAgICAgICAgIF90aGlzMy5wYXNzd29yZEVycm9yTWVzc2FnZSA9ICJQbGVhc2UgZW5zdXJlIHlvdSBoYXZlIGF0bGVhc3QgZWlnaHQgY2hhcmFjdGVycywgb25lIHVwcGVyY2FzZSBsZXR0ZXIsIG9uZSBsb3dlcmNhc2UgbGV0dGVyIGFuZCBvbmUgbnVtYmVyLiI7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIGNhc2UgMToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMyk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIHNpZ251cDogZnVuY3Rpb24gc2lnbnVwKCkgewogICAgICB2YXIgX3RoaXM0ID0gdGhpczsKCiAgICAgIHZhciB1c2VybmFtZSA9IHRoaXMudXNlcm5hbWU7CiAgICAgIHZhciBwYXNzd29yZCA9IHRoaXMucGFzc3dvcmQ7CiAgICAgIHZhciBlbWFpbCA9IHRoaXMuZW1haWw7CiAgICAgIGF4aW9zLnBvc3QodGhpcy5iYXNlVVJMICsgIi9hY2NvdW50L3NpZ251cCIsIHsKICAgICAgICB1c2VybmFtZTogdXNlcm5hbWUsCiAgICAgICAgcGFzc3dvcmQ6IHBhc3N3b3JkLAogICAgICAgIGVtYWlsOiBlbWFpbAogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBpZiAocmVzLmRhdGEuc3RhdHVzKSB7CiAgICAgICAgICBfdGhpczQuZXJyb3IgPSBmYWxzZTsKCiAgICAgICAgICBfdGhpczQuJGVtaXQoJ3NpZ25lZHVwJywgewogICAgICAgICAgICB1c2VybmFtZTogdXNlcm5hbWUsCiAgICAgICAgICAgIHBhc3N3b3JkOiBwYXNzd29yZCwKICAgICAgICAgICAgdXNlcl9pZDogcmVzLmRhdGEudXNlcl9pZCwKICAgICAgICAgICAgdG9rZW46IHJlcy5kYXRhLnRva2VuCiAgICAgICAgICB9KTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgY29uc29sZS5sb2coInVuc3VjY2Vzc2Z1bCIpOwogICAgICAgICAgX3RoaXM0LmVycm9yID0gdHJ1ZTsKICAgICAgICB9CgogICAgICAgIGNvbnNvbGUubG9nKHJlcy5zdGF0dXMpOwogICAgICAgIGNvbnNvbGUubG9nKHJlcy5kYXRhKTsKICAgICAgfSk7CiAgICAgIC8qLmNhdGNoKChlcnIpID0+IHsKICAgICAgICAgIGNvbnN0IHJlcyA9IGVyci5yZXNwb25zZTsKICAgICAgICAgIGNvbnNvbGUubG9nKCJ1bnN1Y2Nlc3NmdWwiKQogICAgICAgICAgdGhpcy5lcnJvciA9IHRydWU7CiAgICAgICAgICBjb25zb2xlLmxvZyhyZXMpCiAgICAgICAgICB0aGlzLm1lc3NhZ2UgPSByZXMuZGF0YSA/IHJlcy5kYXRhLmVycm9yID8gcmVzLmRhdGEuZXJyb3IgOiAiIiA6ICIiOwogICAgICB9KSovCiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["signup.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <md-field :class=\"error || usernameError ? 'md-invalid' : ''\">\n            <label>Username</label>\n            <md-input v-model=\"username\" autofocus @change=\"usernameExists\"></md-input>\n            <!--<span class=\"md-error\">Invalid Login</span>-->\n        </md-field>\n        <div class = \"error\" v-if=\"usernameError\">\n            {{usernameErrorMessage}}\n        </div>\n\n        <md-field :class=\"error || emailError ? 'md-invalid' : ''\">\n            <label>Email</label>\n            <md-input v-model=\"email\" type=\"email\" @change=\"emailExists\"></md-input>\n            <!--<span class=\"md-error\">Invalid Login</span>-->\n        </md-field>\n        <div class = \"error\" v-if=\"emailError\">\n            {{emailErrorMessage}}\n        </div>\n        \n\n        <md-field md-has-password :class=\"error || passwordError ? 'md-invalid' : ''\">\n          <label>Password</label>\n          <md-input v-model=\"password\" type=\"password\" @change=\"passwordVerification\"></md-input>\n          <!--<span class=\"md-error\">Invalid Login</span>-->\n        </md-field>\n        <div class = \"error\" v-if=\"passwordError\">\n            {{passwordErrorMessage}}\n        </div>\n\n        <div class = \"error\" v-if=\"error\">\n            {{message}}\n        </div>\n\n        <div style=\"text-align:center\">\n            <md-button class=\"md-raised md-primary\" @click=\"signup\">Sign Up</md-button>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport {mapGetters} from \"vuex\";\n\nexport default {\n    data: ()=>({\n        error:false,\n        message:\"\",\n        username:\"\",\n        password:\"\",\n        email:\"\",\n        usernameError: false,\n        usernameErrorMessage: \"\",\n        emailError: false,\n        emailErrorMessage: \"\",\n        emailRegex:/^\\w+([-]?\\w+)*@\\w+([-]?\\w+)*(\\w{2,3})+$/,\n        passwordError: false,\n        passwordErrorMessage: \"\",\n        passwordRegex:/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/,\n    }),\n    computed: {\n        messageClass () {\n                        return {\n                            'md-invalid': this.error\n                        }\n                    },\n        ...mapGetters({baseURL: 'urls/getURL'})\n    },\n    methods:{\n        async usernameExists() {\n            this.usernameError = (await axios.get(this.baseURL + \"/account/signup-helper/username/\" + this.username)).data.exists;\n            console.log(this.usernameError)\n            if (this.usernameError) {\n                this.usernameErrorMessage = \"Username Already Exists!\";\n            }//if you want to put requirements for username(verification) different ifs\n        },\n        async emailExists() {\n            this.emailError = (await axios.get(this.baseURL + \"/account/signup-helper/email/\" + this.email)).data.exists;\n            console.log(this.emailError, this.email)\n            if (this.emailError) {\n                this.emailErrorMessage = \"Email Already Registered!\";\n            }\n            else if (!this.email.match(this.emailRegex)){\n                this.emailError = true\n                this.emailErrorMessage = \"Not a valid email\"\n            }\n        },\n        async passwordVerification(){\n            if (!this.password.match(this.passwordRegex)){\n                this.passwordError = true\n                this.passwordErrorMessage = \"Please ensure you have atleast eight characters, one uppercase letter, one lowercase letter and one number.\"\n            }\n        },\n        signup() {\n            const username = this.username\n            const password = this.password\n            const email = this.email\n\n            axios.post(this.baseURL + \"/account/signup\", {\n              username,\n              password,\n              email\n            })\n            .then((res) => {\n                if (res.data.status){\n                    this.error=false;\n                    this.$emit('signedup', {username, password, user_id: res.data.user_id, token: res.data.token})\n                }\n                else{\n                    console.log(\"unsuccessful\")\n                    this.error = true\n                }\n                console.log(res.status)\n                console.log(res.data)\n            })\n            /*.catch((err) => {\n                const res = err.response;\n                console.log(\"unsuccessful\")\n                this.error = true;\n                console.log(res)\n                this.message = res.data ? res.data.error ? res.data.error : \"\" : \"\";\n            })*/\n        }\n    }\n}\n</script>\n\n<style scoped>\n.error {\n    color: red;\n}\n</style>"],"sourceRoot":"src/components"}]}